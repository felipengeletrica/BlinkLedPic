Version 3.2 HI-TECH Software Intermediate Code
"19 comum.h
[s S6 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 ]
[n S6 . timer1ms timer10ms timer100ms timer1s timer1min ]
"28
[s S7 `ui 1 `ui 1 `uc 1 `*ui 1 ]
[n S7 . startTime timeoutValue flgInitTimer ptrSystemTimerValue ]
"62 comum.c
[c E399 0 1 .. ]
[n E399 . timerTimeout timerNotTimeout  ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;math.h: 30: extern double fabs(double);
[; ;math.h: 31: extern double floor(double);
[; ;math.h: 32: extern double ceil(double);
[; ;math.h: 33: extern double modf(double, double *);
[; ;math.h: 34: extern double sqrt(double);
[; ;math.h: 35: extern double atof(const char *);
[; ;math.h: 36: extern double sin(double) ;
[; ;math.h: 37: extern double cos(double) ;
[; ;math.h: 38: extern double tan(double) ;
[; ;math.h: 39: extern double asin(double) ;
[; ;math.h: 40: extern double acos(double) ;
[; ;math.h: 41: extern double atan(double);
[; ;math.h: 42: extern double atan2(double, double) ;
[; ;math.h: 43: extern double log(double);
[; ;math.h: 44: extern double log10(double);
[; ;math.h: 45: extern double pow(double, double) ;
[; ;math.h: 46: extern double exp(double) ;
[; ;math.h: 47: extern double sinh(double) ;
[; ;math.h: 48: extern double cosh(double) ;
[; ;math.h: 49: extern double tanh(double);
[; ;math.h: 50: extern double eval_poly(double, const double *, int);
[; ;math.h: 51: extern double frexp(double, int *);
[; ;math.h: 52: extern double ldexp(double, int);
[; ;math.h: 53: extern double fmod(double, double);
[; ;math.h: 54: extern double trunc(double);
[; ;math.h: 55: extern double round(double);
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 34: extern char * strcat(char *, const char *);
[; ;string.h: 35: extern char * strcpy(char *, const char *);
[; ;string.h: 36: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 37: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 38: extern char * strdup(const char *);
[; ;string.h: 39: extern char * strtok(char *, const char *);
[; ;string.h: 42: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 43: extern int strcmp(const char *, const char *);
[; ;string.h: 44: extern int stricmp(const char *, const char *);
[; ;string.h: 45: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 46: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 47: extern void * memchr(const void *, int, size_t);
[; ;string.h: 48: extern size_t strcspn(const char *, const char *);
[; ;string.h: 49: extern char * strpbrk(const char *, const char *);
[; ;string.h: 50: extern size_t strspn(const char *, const char *);
[; ;string.h: 51: extern char * strstr(const char *, const char *);
[; ;string.h: 52: extern char * stristr(const char *, const char *);
[; ;string.h: 53: extern char * strerror(int);
[; ;string.h: 54: extern size_t strlen(const char *);
[; ;string.h: 55: extern char * strchr(const char *, int);
[; ;string.h: 56: extern char * strichr(const char *, int);
[; ;string.h: 57: extern char * strrchr(const char *, int);
[; ;string.h: 58: extern char * strrichr(const char *, int);
[; ;ctype.h: 4: extern __bit isalpha(char);
[; ;ctype.h: 5: extern __bit isupper(char);
[; ;ctype.h: 6: extern __bit islower(char);
[; ;ctype.h: 7: extern __bit isdigit(char);
[; ;ctype.h: 8: extern __bit isxdigit(char);
[; ;ctype.h: 9: extern __bit isspace(char);
[; ;ctype.h: 10: extern __bit ispunct(char);
[; ;ctype.h: 11: extern __bit isalnum(char);
[; ;ctype.h: 12: extern __bit isprint(char);
[; ;ctype.h: 13: extern __bit isgraph(char);
[; ;ctype.h: 14: extern __bit iscntrl(char);
[; ;ctype.h: 17: extern char toupper(char);
[; ;ctype.h: 18: extern char tolower(char);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;assert.h: 18: extern void _fassert(int, const char *, const char *);
[; ;assert.h: 25: extern void __builtin_software_breakpoint(void);
[; ;comum.h: 19: typedef struct {
[; ;comum.h: 20: uint16_t timer1ms;
[; ;comum.h: 21: uint16_t timer10ms;
[; ;comum.h: 22: uint16_t timer100ms;
[; ;comum.h: 23: uint16_t timer1s;
[; ;comum.h: 24: uint16_t timer1min;
[; ;comum.h: 25: } sSystemTimers_t;
[; ;comum.h: 28: typedef struct {
[; ;comum.h: 29: uint16_t startTime;
[; ;comum.h: 30: uint16_t timeoutValue;
[; ;comum.h: 31: uint8_t flgInitTimer;
[; ;comum.h: 32: uint16_t* ptrSystemTimerValue;
[; ;comum.h: 33: } sTimer_t;
[; ;comum.h: 36: typedef enum {
[; ;comum.h: 37: timerTimeout,
[; ;comum.h: 38: timerNotTimeout
[; ;comum.h: 39: } timerFuncReturn;
"41 comum.h
[v _sSystemTimers `S6 ~T0 @X0 1 e ]
[; ;comum.h: 41: sSystemTimers_t sSystemTimers;
[; ;comum.h: 43: void timerInit(sTimer_t* ptrTimer, const uint16_t timeoutValue, const uint16_t *ptrSystemTimerValue);
[; ;comum.h: 44: timerFuncReturn timerIsTimeout(const sTimer_t timerStruct);
[; ;comum.h: 45: void SystemTimers(void);
"34 comum.c
[v _timerInit `(v ~T0 @X0 1 ef3`*S7`Cui`*Cui ]
"35
{
[; ;comum.c: 34: void timerInit(sTimer_t* ptrTimer, const uint16_t timeoutValue, const uint16_t *ptrSystemTimerValue)
[; ;comum.c: 35: {
[e :U _timerInit ]
"34
[v _ptrTimer `*S7 ~T0 @X0 1 r1 ]
[v _timeoutValue `Cui ~T0 @X0 1 r2 ]
[v _ptrSystemTimerValue `*Cui ~T0 @X0 1 r3 ]
"35
[f ]
[; ;comum.c: 36: ptrTimer->timeoutValue = timeoutValue;
"36
[e = . *U _ptrTimer 1 _timeoutValue ]
[; ;comum.c: 38: ptrTimer->flgInitTimer = (timeoutValue >= (65535U)) ? 0 : 1;
"38
[e = . *U _ptrTimer 2 -> ? >= _timeoutValue -> 65535 `ui : -> 0 `i -> 1 `i `uc ]
[; ;comum.c: 39: ptrTimer->ptrSystemTimerValue = (uint16_t *) ptrSystemTimerValue;
"39
[e = . *U _ptrTimer 3 -> _ptrSystemTimerValue `*ui ]
[; ;comum.c: 41: ptrTimer->startTime = *(ptrTimer->ptrSystemTimerValue);
"41
[e = . *U _ptrTimer 0 *U . *U _ptrTimer 3 ]
[; ;comum.c: 42: }
"42
[e :UE 8 ]
}
"45
[v _timerValue `(ui ~T0 @X0 1 sf1`CS7 ]
"46
{
[; ;comum.c: 45: static uint16_t timerValue(const sTimer_t timerStruct)
[; ;comum.c: 46: {
[e :U _timerValue ]
"45
[v _timerStruct `CS7 ~T0 @X0 1 r1 ]
"46
[f ]
"47
[v _difTime `ui ~T0 @X0 1 a ]
[; ;comum.c: 47: uint16_t difTime;
[; ;comum.c: 49: if(!timerStruct.timeoutValue)
"49
[e $ ! ! != . _timerStruct 1 -> -> 0 `i `Cui 10  ]
[; ;comum.c: 50: {
"50
{
[; ;comum.c: 51: return(0);
"51
[e ) -> -> 0 `i `ui ]
[e $UE 9  ]
"52
}
[e :U 10 ]
[; ;comum.c: 52: }
[; ;comum.c: 54: difTime = (*(timerStruct.ptrSystemTimerValue) < timerStruct.startTime)
[; ;comum.c: 55: ? ((65535U) - timerStruct.startTime) + *(timerStruct.ptrSystemTimerValue)
[; ;comum.c: 56: : *(timerStruct.ptrSystemTimerValue) - timerStruct.startTime;
"56
[e = _difTime ? < *U . _timerStruct 3 . _timerStruct 0 : + - -> 65535 `ui . _timerStruct 0 *U . _timerStruct 3 - *U . _timerStruct 3 . _timerStruct 0 ]
[; ;comum.c: 58: return(difTime);
"58
[e ) _difTime ]
[e $UE 9  ]
[; ;comum.c: 59: }
"59
[e :UE 9 ]
}
"61
[v _timerIsTimeout `(E399 ~T0 @X0 1 ef1`CS7 ]
"62
{
[; ;comum.c: 61: timerFuncReturn timerIsTimeout(sTimer_t timerStruct)
[; ;comum.c: 62: {
[e :U _timerIsTimeout ]
"61
[v _timerStruct `S7 ~T0 @X0 1 r1 ]
"62
[f ]
[; ;comum.c: 64: if(timerValue(timerStruct) >= timerStruct.timeoutValue)
"64
[e $ ! >= ( _timerValue (1 _timerStruct . _timerStruct 1 12  ]
[; ;comum.c: 65: {
"65
{
[; ;comum.c: 67: return(timerTimeout);
"67
[e ) . `E399 0 ]
[e $UE 11  ]
"68
}
[e :U 12 ]
[; ;comum.c: 68: }
[; ;comum.c: 70: return(timerNotTimeout);
"70
[e ) . `E399 1 ]
[e $UE 11  ]
[; ;comum.c: 71: }
"71
[e :UE 11 ]
}
"73
[v _SystemTimers `(v ~T0 @X0 1 ef ]
"74
{
[; ;comum.c: 73: void SystemTimers()
[; ;comum.c: 74: {
[e :U _SystemTimers ]
[f ]
[; ;comum.c: 76: sSystemTimers.timer1ms == (65535U)
[; ;comum.c: 77: ? (sSystemTimers.timer1ms = 0)
[; ;comum.c: 78: : sSystemTimers.timer1ms++;
"78
[e ? == . _sSystemTimers 0 -> 65535 `ui : = . _sSystemTimers 0 -> -> 0 `i `ui ++ . _sSystemTimers 0 -> -> 1 `i `ui ]
[; ;comum.c: 81: if(!(sSystemTimers.timer1ms % 10))
"81
[e $ ! ! != % . _sSystemTimers 0 -> -> 10 `i `ui -> -> 0 `i `ui 14  ]
[; ;comum.c: 82: sSystemTimers.timer10ms == (65535U)
[; ;comum.c: 83: ? (sSystemTimers.timer10ms = 0)
[; ;comum.c: 84: : sSystemTimers.timer10ms++;
"84
[e ? == . _sSystemTimers 1 -> 65535 `ui : = . _sSystemTimers 1 -> -> 0 `i `ui ++ . _sSystemTimers 1 -> -> 1 `i `ui ]
[e :U 14 ]
[; ;comum.c: 87: if(!(sSystemTimers.timer1ms % 100))
"87
[e $ ! ! != % . _sSystemTimers 0 -> -> 100 `i `ui -> -> 0 `i `ui 15  ]
[; ;comum.c: 88: sSystemTimers.timer100ms == (65535U)
[; ;comum.c: 89: ? (sSystemTimers.timer100ms = 0)
[; ;comum.c: 90: : sSystemTimers.timer100ms++;
"90
[e ? == . _sSystemTimers 2 -> 65535 `ui : = . _sSystemTimers 2 -> -> 0 `i `ui ++ . _sSystemTimers 2 -> -> 1 `i `ui ]
[e :U 15 ]
[; ;comum.c: 93: if(!(sSystemTimers.timer1ms % 1000))
"93
[e $ ! ! != % . _sSystemTimers 0 -> -> 1000 `i `ui -> -> 0 `i `ui 16  ]
[; ;comum.c: 94: sSystemTimers.timer1s == (65535U)
[; ;comum.c: 95: ? sSystemTimers.timer1s = 0
[; ;comum.c: 96: : sSystemTimers.timer1s++;
"96
[e ? == . _sSystemTimers 3 -> 65535 `ui : = . _sSystemTimers 3 -> -> 0 `i `ui ++ . _sSystemTimers 3 -> -> 1 `i `ui ]
[e :U 16 ]
[; ;comum.c: 99: if(!(sSystemTimers.timer1s % 60))
"99
[e $ ! ! != % . _sSystemTimers 3 -> -> 60 `i `ui -> -> 0 `i `ui 17  ]
[; ;comum.c: 100: sSystemTimers.timer1min == (65535U)
[; ;comum.c: 101: ? sSystemTimers.timer1min = 0
[; ;comum.c: 102: : sSystemTimers.timer1min++;
"102
[e ? == . _sSystemTimers 4 -> 65535 `ui : = . _sSystemTimers 4 -> -> 0 `i `ui ++ . _sSystemTimers 4 -> -> 1 `i `ui ]
[e :U 17 ]
[; ;comum.c: 103: }
"103
[e :UE 13 ]
}
