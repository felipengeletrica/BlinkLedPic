

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Jun 18 22:35:52 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.41
    31                           ; Generated 25/01/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     _TMR0	set	4054
    65  0000                     _T0CONbits	set	4053
    66  0000                     _INTCON2bits	set	4081
    67  0000                     _T0CON	set	4053
    68  0000                     _IPR1bits	set	3999
    69  0000                     _RCONbits	set	4048
    70  0000                     _INTCONbits	set	4082
    71  0000                     _PIE1bits	set	3997
    72  0000                     _T1CON	set	4045
    73  0000                     _RCREG	set	4014
    74  0000                     _PIR1bits	set	3998
    75  0000                     _TXREG	set	4013
    76  0000                     _TXSTAbits	set	4012
    77  0000                     _TXSTA	set	4012
    78  0000                     _RCSTA	set	4011
    79  0000                     _SPBRG	set	4015
    80  0000                     _SPBRGH	set	4016
    81  0000                     _BAUDCON	set	4024
    82  0000                     _TRISCbits	set	3988
    83  0000                     _PORTBbits	set	3969
    84  0000                     _TRISBbits	set	3987
    85  0000                     _TMR1IF	set	31984
    86  0000                     _TMR1IE	set	31976
    87                           
    88                           	psect	smallconst
    89  000800                     __psmallconst:
    90                           	opt stack 0
    91  000800  00                 	db	0
    92  000801                     STR_4:
    93  000801  0A                 	db	10
    94  000802  0D                 	db	13
    95  000803  53                 	db	83	;'S'
    96  000804  75                 	db	117	;'u'
    97  000805  63                 	db	99	;'c'
    98  000806  65                 	db	101	;'e'
    99  000807  73                 	db	115	;'s'
   100  000808  73                 	db	115	;'s'
   101  000809  20                 	db	32
   102  00080A  69                 	db	105	;'i'
   103  00080B  6E                 	db	110	;'n'
   104  00080C  69                 	db	105	;'i'
   105  00080D  74                 	db	116	;'t'
   106  00080E  20                 	db	32
   107  00080F  64                 	db	100	;'d'
   108  000810  65                 	db	101	;'e'
   109  000811  76                 	db	118	;'v'
   110  000812  69                 	db	105	;'i'
   111  000813  63                 	db	99	;'c'
   112  000814  65                 	db	101	;'e'
   113  000815  21                 	db	33
   114  000816  21                 	db	33
   115  000817  00                 	db	0
   116  000818                     STR_3:
   117  000818  0A                 	db	10
   118  000819  0D                 	db	13
   119  00081A  4B                 	db	75	;'K'
   120  00081B  65                 	db	101	;'e'
   121  00081C  65                 	db	101	;'e'
   122  00081D  70                 	db	112	;'p'
   123  00081E  20                 	db	32
   124  00081F  41                 	db	65	;'A'
   125  000820  6C                 	db	108	;'l'
   126  000821  69                 	db	105	;'i'
   127  000822  76                 	db	118	;'v'
   128  000823  65                 	db	101	;'e'
   129  000824  20                 	db	32
   130  000825  2E                 	db	46
   131  000826  2E                 	db	46
   132  000827  2E                 	db	46
   133  000828  00                 	db	0
   134  000829                     STR_2:
   135  000829  0A                 	db	10
   136  00082A  0D                 	db	13
   137  00082B  4C                 	db	76	;'L'
   138  00082C  45                 	db	69	;'E'
   139  00082D  44                 	db	68	;'D'
   140  00082E  20                 	db	32
   141  00082F  4F                 	db	79	;'O'
   142  000830  46                 	db	70	;'F'
   143  000831  46                 	db	70	;'F'
   144  000832  00                 	db	0
   145  000833                     STR_1:
   146  000833  0A                 	db	10
   147  000834  0D                 	db	13
   148  000835  4C                 	db	76	;'L'
   149  000836  45                 	db	69	;'E'
   150  000837  44                 	db	68	;'D'
   151  000838  20                 	db	32
   152  000839  4F                 	db	79	;'O'
   153  00083A  4E                 	db	78	;'N'
   154  00083B  00                 	db	0
   155                           
   156                           ; #config settings
   157  00083C  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           	psect	cinit
   160  000C72                     __pcinit:
   161                           	opt stack 0
   162  000C72                     start_initialization:
   163                           	opt stack 0
   164  000C72                     __initialization:
   165                           	opt stack 0
   166                           
   167                           ; Clear objects allocated to COMRAM (24 bytes)
   168  000C72  EE00  F025         	lfsr	0,__pbssCOMRAM
   169  000C76  0E18               	movlw	24
   170  000C78                     clear_0:
   171  000C78  6AEE               	clrf	postinc0,c
   172  000C7A  06E8               	decf	wreg,f,c
   173  000C7C  E1FD               	bnz	clear_0
   174  000C7E                     end_of_initialization:
   175                           	opt stack 0
   176  000C7E                     __end_of__initialization:
   177                           	opt stack 0
   178  000C7E  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   179  000C80  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   180  000C82  0E00               	movlw	low (__Lsmallconst shr (0+16))
   181  000C84  6EF8               	movwf	tblptru,c
   182  000C86  0E08               	movlw	high __Lsmallconst
   183  000C88  6EF7               	movwf	tblptrh,c
   184  000C8A  0100               	movlb	0
   185  000C8C  EF48  F006         	goto	_main	;jump to C main() function
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           postinc0	equ	0xFEE
   189                           wreg	equ	0xFE8
   190                           
   191                           	psect	bssCOMRAM
   192  000025                     __pbssCOMRAM:
   193                           	opt stack 0
   194  000025                     _sSystemTimers:
   195                           	opt stack 0
   196  000025                     	ds	10
   197  00002F                     KeepAlive@timerKeepAlive:
   198                           	opt stack 0
   199  00002F                     	ds	7
   200  000036                     ledStatus@timerLedStatus:
   201                           	opt stack 0
   202  000036                     	ds	7
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           
   208                           	psect	cstackBANK0
   209  000060                     __pcstackBANK0:
   210                           	opt stack 0
   211  000060                     ?_timerValue:
   212                           	opt stack 0
   213  000060                     putUsart@c:
   214                           	opt stack 0
   215  000060                     timerInit@ptrTimer:
   216                           	opt stack 0
   217  000060                     timerValue@timerStruct:
   218                           	opt stack 0
   219                           
   220                           ; 7 bytes @ 0x0
   221  000060                     	ds	1
   222  000061                     putsUsart@s:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x1
   226  000061                     	ds	1
   227  000062                     timerInit@timeoutValue:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x2
   231  000062                     	ds	1
   232  000063                     
   233                           ; 1 bytes @ 0x3
   234  000063                     	ds	1
   235  000064                     timerInit@ptrSystemTimerValue:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x4
   239  000064                     	ds	2
   240  000066                     ??_timerInit:
   241                           
   242                           ; 1 bytes @ 0x6
   243  000066                     	ds	1
   244  000067                     ??_timerValue:
   245                           
   246                           ; 1 bytes @ 0x7
   247  000067                     	ds	4
   248  00006B                     timerValue@difTime:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0xB
   252  00006B                     	ds	2
   253  00006D                     timerIsTimeout@timerStruct:
   254                           	opt stack 0
   255                           
   256                           ; 7 bytes @ 0xD
   257  00006D                     	ds	7
   258  000074                     ??_ledStatus:
   259  000074                     
   260                           ; 1 bytes @ 0x14
   261  000074                     	ds	1
   262  000075                     tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           
   267                           ; 1 bytes @ 0x15
   268                           
   269                           	psect	cstackCOMRAM
   270  000001                     __pcstackCOMRAM:
   271                           	opt stack 0
   272  000001                     ??_tc_int:
   273  000001                     
   274                           ; 1 bytes @ 0x0
   275  000001                     	ds	14
   276  00000F                     ?___lwmod:
   277                           	opt stack 0
   278  00000F                     ___lwmod@dividend:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0xE
   282  00000F                     	ds	2
   283  000011                     ___lwmod@divisor:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x10
   287  000011                     	ds	2
   288  000013                     ___lwmod@counter:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x12
   292  000013                     	ds	1
   293  000014                     ??_LowIsr:
   294                           
   295                           ; 1 bytes @ 0x13
   296  000014                     	ds	17
   297                           tblptru	equ	0xFF8
   298                           tblptrh	equ	0xFF7
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 152 in file "main.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      void 
   314 ;; Registers used:
   315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   321 ;;      Params:         0       0       0       0       0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0       0       0       0       0
   323 ;;      Temps:          0       0       0       0       0       0       0       0       0
   324 ;;      Totals:         0       0       0       0       0       0       0       0       0
   325 ;;Total ram usage:        0 bytes
   326 ;; Hardware stack levels required when called:    7
   327 ;; This function calls:
   328 ;;		_InitMCU
   329 ;;		_KeepAlive
   330 ;;		_ledStatus
   331 ;;		_putsUsart
   332 ;; This function is called by:
   333 ;;		Startup code after reset
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text0
   338  000C90                     __ptext0:
   339                           	opt stack 0
   340  000C90                     _main:
   341                           	opt stack 24
   342                           
   343                           ;main.c: 154: InitMCU();
   344                           
   345                           ;incstack = 0
   346  000C90  EC72  F006         	call	_InitMCU	;wreg free
   347                           
   348                           ;main.c: 155: putsUsart((char *)"\n\rSucess init device!!");
   349  000C94  0E01               	movlw	low STR_4
   350  000C96  0100               	movlb	0	; () banked
   351  000C98  6F61               	movwf	putsUsart@s& (0+255),b
   352  000C9A  0E08               	movlw	high STR_4
   353  000C9C  0100               	movlb	0	; () banked
   354  000C9E  6F62               	movwf	(putsUsart@s+1)& (0+255),b
   355  000CA0  EC23  F006         	call	_putsUsart	;wreg free
   356  000CA4                     l1215:
   357                           
   358                           ;main.c: 158: {
   359                           ;main.c: 160: ledStatus();
   360  000CA4  ECEE  F004         	call	_ledStatus	;wreg free
   361                           
   362                           ;main.c: 162: KeepAlive();
   363  000CA8  ECB9  F005         	call	_KeepAlive	;wreg free
   364  000CAC  D7FB               	goto	l1215
   365  000CAE                     __end_of_main:
   366                           	opt stack 0
   367                           tblptru	equ	0xFF8
   368                           tblptrh	equ	0xFF7
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           
   372 ;; *************** function _ledStatus *****************
   373 ;; Defined at:
   374 ;;		line 117 in file "main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   388 ;;      Params:         0       0       0       0       0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0       0       0       0       0
   390 ;;      Temps:          0       1       0       0       0       0       0       0       0
   391 ;;      Totals:         0       1       0       0       0       0       0       0       0
   392 ;;Total ram usage:        1 bytes
   393 ;; Hardware stack levels used:    1
   394 ;; Hardware stack levels required when called:    6
   395 ;; This function calls:
   396 ;;		_putsUsart
   397 ;;		_timerInit
   398 ;;		_timerIsTimeout
   399 ;; This function is called by:
   400 ;;		_main
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           	psect	text1
   405  0009DC                     __ptext1:
   406                           	opt stack 0
   407  0009DC                     _ledStatus:
   408                           	opt stack 24
   409                           
   410                           ;main.c: 119: static sTimer_t timerLedStatus;
   411                           ;main.c: 121: if(timerLedStatus.flgInitTimer == 0){
   412                           
   413                           ;incstack = 0
   414  0009DC  503A               	movf	ledStatus@timerLedStatus+4,w,c
   415  0009DE  A4D8               	btfss	status,2,c
   416  0009E0  D038               	goto	l1197
   417                           
   418                           ;main.c: 123: timerInit(&timerLedStatus, 5, &sSystemTimers.timer100ms);
   419  0009E2  0E36               	movlw	low ledStatus@timerLedStatus
   420  0009E4  0100               	movlb	0	; () banked
   421  0009E6  6F60               	movwf	timerInit@ptrTimer& (0+255),b
   422  0009E8  0E00               	movlw	high ledStatus@timerLedStatus
   423  0009EA  0100               	movlb	0	; () banked
   424  0009EC  6F61               	movwf	(timerInit@ptrTimer+1)& (0+255),b
   425  0009EE  0E00               	movlw	0
   426  0009F0  0100               	movlb	0	; () banked
   427  0009F2  6F63               	movwf	(timerInit@timeoutValue+1)& (0+255),b
   428  0009F4  0E05               	movlw	5
   429  0009F6  6F62               	movwf	timerInit@timeoutValue& (0+255),b
   430  0009F8  0E29               	movlw	low (_sSystemTimers+4)
   431  0009FA  0100               	movlb	0	; () banked
   432  0009FC  6F64               	movwf	timerInit@ptrSystemTimerValue& (0+255),b
   433  0009FE  0E00               	movlw	high (_sSystemTimers+4)
   434  000A00  0100               	movlb	0	; () banked
   435  000A02  6F65               	movwf	(timerInit@ptrSystemTimerValue+1)& (0+255),b
   436  000A04  EC3A  F005         	call	_timerInit	;wreg free
   437                           
   438                           ;main.c: 124: PORTBbits.RB5 =~ PORTBbits.RB5;
   439  000A08  AA81               	btfss	3969,5,c	;volatile
   440  000A0A  D002               	goto	u740
   441  000A0C  0E01               	movlw	1
   442  000A0E  D001               	goto	u746
   443  000A10                     u740:
   444  000A10  0E00               	movlw	0
   445  000A12                     u746:
   446  000A12  0AFF               	xorlw	255
   447  000A14  0100               	movlb	0	; () banked
   448  000A16  6F74               	movwf	??_ledStatus& (0+255),b
   449  000A18  0100               	movlb	0	; () banked
   450  000A1A  3B74               	swapf	??_ledStatus& (0+255),f,b
   451  000A1C  4774               	rlncf	??_ledStatus& (0+255),f,b
   452  000A1E  5081               	movf	3969,w,c	;volatile
   453  000A20  0100               	movlb	0	; () banked
   454  000A22  1974               	xorwf	??_ledStatus& (0+255),w,b
   455  000A24  0BDF               	andlw	-33
   456  000A26  1974               	xorwf	??_ledStatus& (0+255),w,b
   457  000A28  6E81               	movwf	3969,c	;volatile
   458                           
   459                           ; BSR set to: 0
   460                           ;main.c: 126: if(PORTBbits.RB5)
   461  000A2A  AA81               	btfss	3969,5,c	;volatile
   462  000A2C  D009               	goto	l1195
   463                           
   464                           ; BSR set to: 0
   465                           ;main.c: 127: putsUsart((char *)"\n\rLED ON");
   466  000A2E  0E33               	movlw	low STR_1
   467  000A30  0100               	movlb	0	; () banked
   468  000A32  6F61               	movwf	putsUsart@s& (0+255),b
   469  000A34  0E08               	movlw	high STR_1
   470  000A36  0100               	movlb	0	; () banked
   471  000A38  6F62               	movwf	(putsUsart@s+1)& (0+255),b
   472  000A3A  EC23  F006         	call	_putsUsart	;wreg free
   473  000A3E  0012               	return	
   474  000A40                     l1195:
   475                           
   476                           ;main.c: 128: else
   477                           ;main.c: 129: putsUsart((char *)"\n\rLED OFF");
   478  000A40  0E29               	movlw	low STR_2
   479  000A42  0100               	movlb	0	; () banked
   480  000A44  6F61               	movwf	putsUsart@s& (0+255),b
   481  000A46  0E08               	movlw	high STR_2
   482  000A48  0100               	movlb	0	; () banked
   483  000A4A  6F62               	movwf	(putsUsart@s+1)& (0+255),b
   484  000A4C  EC23  F006         	call	_putsUsart	;wreg free
   485                           
   486                           ;main.c: 131: }
   487  000A50  0012               	return	
   488  000A52                     l1197:
   489                           
   490                           ;main.c: 132: else if(timerIsTimeout(timerLedStatus) == timerTimeout){
   491  000A52  EE20  F036         	lfsr	2,ledStatus@timerLedStatus
   492  000A56  EE00  F06D         	lfsr	0,timerIsTimeout@timerStruct
   493  000A5A  0E06               	movlw	6
   494  000A5C                     u761:
   495  000A5C  CFDB FFEB          	movff	plusw2,plusw0
   496  000A60  06E8               	decf	wreg,f,c
   497  000A62  E2FC               	bc	u761
   498  000A64  EC0A  F006         	call	_timerIsTimeout	;wreg free
   499  000A68  0900               	iorlw	0
   500  000A6A  A4D8               	btfss	status,2,c
   501  000A6C  0012               	return	
   502                           
   503                           ;main.c: 134: timerLedStatus.flgInitTimer = 0;
   504  000A6E  0E00               	movlw	0
   505  000A70  6E3A               	movwf	ledStatus@timerLedStatus+4,c
   506  000A72  0012               	return	
   507  000A74                     __end_of_ledStatus:
   508                           	opt stack 0
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           postinc0	equ	0xFEE
   512                           plusw0	equ	0xFEB
   513                           wreg	equ	0xFE8
   514                           plusw2	equ	0xFDB
   515                           status	equ	0xFD8
   516                           
   517 ;; *************** function _KeepAlive *****************
   518 ;; Defined at:
   519 ;;		line 138 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   533 ;;      Params:         0       0       0       0       0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0       0       0       0       0
   536 ;;      Totals:         0       0       0       0       0       0       0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    6
   540 ;; This function calls:
   541 ;;		_putsUsart
   542 ;;		_timerInit
   543 ;;		_timerIsTimeout
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text2
   550  000B72                     __ptext2:
   551                           	opt stack 0
   552  000B72                     _KeepAlive:
   553                           	opt stack 24
   554                           
   555                           ;main.c: 140: static sTimer_t timerKeepAlive;
   556                           ;main.c: 142: if(timerKeepAlive.flgInitTimer == 0){
   557                           
   558                           ;incstack = 0
   559  000B72  5033               	movf	KeepAlive@timerKeepAlive+4,w,c
   560  000B74  A4D8               	btfss	status,2,c
   561  000B76  D01C               	goto	l1207
   562                           
   563                           ;main.c: 144: timerInit(&timerKeepAlive, 10, &sSystemTimers.timer1s);
   564  000B78  0E2F               	movlw	low KeepAlive@timerKeepAlive
   565  000B7A  0100               	movlb	0	; () banked
   566  000B7C  6F60               	movwf	timerInit@ptrTimer& (0+255),b
   567  000B7E  0E00               	movlw	high KeepAlive@timerKeepAlive
   568  000B80  0100               	movlb	0	; () banked
   569  000B82  6F61               	movwf	(timerInit@ptrTimer+1)& (0+255),b
   570  000B84  0E00               	movlw	0
   571  000B86  0100               	movlb	0	; () banked
   572  000B88  6F63               	movwf	(timerInit@timeoutValue+1)& (0+255),b
   573  000B8A  0E0A               	movlw	10
   574  000B8C  6F62               	movwf	timerInit@timeoutValue& (0+255),b
   575  000B8E  0E2B               	movlw	low (_sSystemTimers+6)
   576  000B90  0100               	movlb	0	; () banked
   577  000B92  6F64               	movwf	timerInit@ptrSystemTimerValue& (0+255),b
   578  000B94  0E00               	movlw	high (_sSystemTimers+6)
   579  000B96  0100               	movlb	0	; () banked
   580  000B98  6F65               	movwf	(timerInit@ptrSystemTimerValue+1)& (0+255),b
   581  000B9A  EC3A  F005         	call	_timerInit	;wreg free
   582                           
   583                           ;main.c: 145: putsUsart((char *)"\n\rKeep Alive ...");
   584  000B9E  0E18               	movlw	low STR_3
   585  000BA0  0100               	movlb	0	; () banked
   586  000BA2  6F61               	movwf	putsUsart@s& (0+255),b
   587  000BA4  0E08               	movlw	high STR_3
   588  000BA6  0100               	movlb	0	; () banked
   589  000BA8  6F62               	movwf	(putsUsart@s+1)& (0+255),b
   590  000BAA  EC23  F006         	call	_putsUsart	;wreg free
   591                           
   592                           ;main.c: 146: }
   593  000BAE  0012               	return	
   594  000BB0                     l1207:
   595                           
   596                           ;main.c: 147: else if(timerIsTimeout(timerKeepAlive) == timerTimeout){
   597  000BB0  EE20  F02F         	lfsr	2,KeepAlive@timerKeepAlive
   598  000BB4  EE00  F06D         	lfsr	0,timerIsTimeout@timerStruct
   599  000BB8  0E06               	movlw	6
   600  000BBA                     u791:
   601  000BBA  CFDB FFEB          	movff	plusw2,plusw0
   602  000BBE  06E8               	decf	wreg,f,c
   603  000BC0  E2FC               	bc	u791
   604  000BC2  EC0A  F006         	call	_timerIsTimeout	;wreg free
   605  000BC6  0900               	iorlw	0
   606  000BC8  A4D8               	btfss	status,2,c
   607  000BCA  0012               	return	
   608                           
   609                           ;main.c: 148: timerKeepAlive.flgInitTimer = 0;
   610  000BCC  0E00               	movlw	0
   611  000BCE  6E33               	movwf	KeepAlive@timerKeepAlive+4,c
   612  000BD0  0012               	return	
   613  000BD2                     __end_of_KeepAlive:
   614                           	opt stack 0
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           postinc0	equ	0xFEE
   618                           plusw0	equ	0xFEB
   619                           wreg	equ	0xFE8
   620                           plusw2	equ	0xFDB
   621                           status	equ	0xFD8
   622                           
   623 ;; *************** function _timerIsTimeout *****************
   624 ;; Defined at:
   625 ;;		line 61 in file "comum.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  timerStruct     7   13[BANK0 ] struct .
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      enum E4234
   632 ;; Registers used:
   633 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   639 ;;      Params:         0       7       0       0       0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0       0       0       0       0
   642 ;;      Totals:         0       7       0       0       0       0       0       0       0
   643 ;;Total ram usage:        7 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; Hardware stack levels required when called:    5
   646 ;; This function calls:
   647 ;;		_timerValue
   648 ;; This function is called by:
   649 ;;		_ledStatus
   650 ;;		_KeepAlive
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text3
   655  000C14                     __ptext3:
   656                           	opt stack 0
   657  000C14                     _timerIsTimeout:
   658                           	opt stack 24
   659                           
   660                           ;comum.c: 64: if(timerValue(timerStruct) >= timerStruct.timeoutValue)
   661                           
   662                           ;incstack = 0
   663  000C14  EE20  F06D         	lfsr	2,timerIsTimeout@timerStruct
   664  000C18  EE00  F060         	lfsr	0,timerValue@timerStruct
   665  000C1C  0E06               	movlw	6
   666  000C1E                     u711:
   667  000C1E  CFDB FFEB          	movff	plusw2,plusw0
   668  000C22  06E8               	decf	wreg,f,c
   669  000C24  E2FC               	bc	u711
   670  000C26  EC94  F004         	call	_timerValue	;wreg free
   671  000C2A  0100               	movlb	0	; () banked
   672  000C2C  516F               	movf	(timerIsTimeout@timerStruct+2)& (0+255),w,b
   673  000C2E  0100               	movlb	0	; () banked
   674  000C30  5D60               	subwf	?_timerValue& (0+255),w,b
   675  000C32  0100               	movlb	0	; () banked
   676  000C34  5170               	movf	(timerIsTimeout@timerStruct+3)& (0+255),w,b
   677  000C36  0100               	movlb	0	; () banked
   678  000C38  5961               	subwfb	(?_timerValue+1)& (0+255),w,b
   679  000C3A  A0D8               	btfss	status,0,c
   680  000C3C  D002               	goto	l1177
   681                           
   682                           ; BSR set to: 0
   683                           ;comum.c: 65: {
   684                           ;comum.c: 67: return(timerTimeout);
   685  000C3E  0E00               	movlw	0
   686                           
   687                           ; BSR set to: 0
   688  000C40  0012               	return	
   689  000C42                     l1177:
   690                           
   691                           ; BSR set to: 0
   692                           ;comum.c: 68: }
   693                           ;comum.c: 70: return(timerNotTimeout);
   694  000C42  0E01               	movlw	1
   695  000C44  0012               	return	
   696  000C46                     __end_of_timerIsTimeout:
   697                           	opt stack 0
   698                           tblptru	equ	0xFF8
   699                           tblptrh	equ	0xFF7
   700                           postinc0	equ	0xFEE
   701                           plusw0	equ	0xFEB
   702                           wreg	equ	0xFE8
   703                           plusw2	equ	0xFDB
   704                           status	equ	0xFD8
   705                           
   706 ;; *************** function _timerValue *****************
   707 ;; Defined at:
   708 ;;		line 45 in file "comum.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  timerStruct     7    0[BANK0 ] const struct .
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  difTime         2   11[BANK0 ] unsigned int 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  2    0[BANK0 ] unsigned int 
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   722 ;;      Params:         0       7       0       0       0       0       0       0       0
   723 ;;      Locals:         0       2       0       0       0       0       0       0       0
   724 ;;      Temps:          0       4       0       0       0       0       0       0       0
   725 ;;      Totals:         0      13       0       0       0       0       0       0       0
   726 ;;Total ram usage:       13 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    4
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_timerIsTimeout
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text4
   737  000928                     __ptext4:
   738                           	opt stack 0
   739  000928                     _timerValue:
   740                           	opt stack 24
   741                           
   742                           ;comum.c: 47: uint16_t difTime;
   743                           ;comum.c: 49: if(!timerStruct.timeoutValue)
   744                           
   745                           ; BSR set to: 0
   746                           ;incstack = 0
   747  000928  0100               	movlb	0	; () banked
   748  00092A  5162               	movf	(timerValue@timerStruct+2)& (0+255),w,b
   749  00092C  0100               	movlb	0	; () banked
   750  00092E  1163               	iorwf	(timerValue@timerStruct+3)& (0+255),w,b
   751  000930  A4D8               	btfss	status,2,c
   752  000932  D006               	goto	l1125
   753                           
   754                           ; BSR set to: 0
   755                           ;comum.c: 50: {
   756                           ;comum.c: 51: return(0);
   757  000934  0E00               	movlw	0
   758  000936  0100               	movlb	0	; () banked
   759  000938  6F61               	movwf	(?_timerValue+1)& (0+255),b
   760  00093A  0E00               	movlw	0
   761  00093C  6F60               	movwf	?_timerValue& (0+255),b
   762                           
   763                           ; BSR set to: 0
   764  00093E  0012               	return	
   765  000940                     l1125:
   766                           
   767                           ; BSR set to: 0
   768                           ;comum.c: 52: }
   769                           ;comum.c: 54: difTime = (*(timerStruct.ptrSystemTimerValue) < timerStruct.startTime)
   770                           ;comum.c: 55: ? ((65535U) - timerStruct.startTime) + *(timerStruct.ptrSystemTimerValue)
   771                           ;comum.c: 56: : *(timerStruct.ptrSystemTimerValue) - timerStruct.startTime;
   772  000940  C065  FFD9         	movff	timerValue@timerStruct+5,fsr2l
   773  000944  C066  FFDA         	movff	timerValue@timerStruct+6,fsr2h
   774  000948  0100               	movlb	0	; () banked
   775  00094A  5160               	movf	timerValue@timerStruct& (0+255),w,b
   776  00094C  5CDE               	subwf	postinc2,w,c
   777  00094E  0100               	movlb	0	; () banked
   778  000950  5161               	movf	(timerValue@timerStruct+1)& (0+255),w,b
   779  000952  58DE               	subwfb	postinc2,w,c
   780  000954  A0D8               	btfss	status,0,c
   781  000956  D01A               	goto	l1129
   782                           
   783                           ; BSR set to: 0
   784  000958  C065  FFD9         	movff	timerValue@timerStruct+5,fsr2l
   785  00095C  C066  FFDA         	movff	timerValue@timerStruct+6,fsr2h
   786  000960  CFDE F067          	movff	postinc2,??_timerValue
   787  000964  CFDD F068          	movff	postdec2,??_timerValue+1
   788  000968  C060  F069         	movff	timerValue@timerStruct,??_timerValue+2
   789  00096C  C061  F06A         	movff	timerValue@timerStruct+1,??_timerValue+3
   790  000970  0100               	movlb	0	; () banked
   791  000972  1F69               	comf	(??_timerValue+2)& (0+255),f,b
   792  000974  1F6A               	comf	(??_timerValue+3)& (0+255),f,b
   793  000976  4B69               	infsnz	(??_timerValue+2)& (0+255),f,b
   794  000978  2B6A               	incf	(??_timerValue+3)& (0+255),f,b
   795  00097A  0100               	movlb	0	; () banked
   796  00097C  5167               	movf	??_timerValue& (0+255),w,b
   797  00097E  0100               	movlb	0	; () banked
   798  000980  2569               	addwf	(??_timerValue+2)& (0+255),w,b
   799  000982  0100               	movlb	0	; () banked
   800  000984  6F6B               	movwf	timerValue@difTime& (0+255),b
   801  000986  0100               	movlb	0	; () banked
   802  000988  5168               	movf	(??_timerValue+1)& (0+255),w,b
   803  00098A  D01F               	goto	L1
   804  00098C                     l1129:
   805                           
   806                           ; BSR set to: 0
   807  00098C  C065  FFD9         	movff	timerValue@timerStruct+5,fsr2l
   808  000990  C066  FFDA         	movff	timerValue@timerStruct+6,fsr2h
   809  000994  CFDE F067          	movff	postinc2,??_timerValue
   810  000998  CFDD F068          	movff	postdec2,??_timerValue+1
   811  00099C  C060  F069         	movff	timerValue@timerStruct,??_timerValue+2
   812  0009A0  C061  F06A         	movff	timerValue@timerStruct+1,??_timerValue+3
   813  0009A4  0100               	movlb	0	; () banked
   814  0009A6  1F69               	comf	(??_timerValue+2)& (0+255),f,b
   815  0009A8  1F6A               	comf	(??_timerValue+3)& (0+255),f,b
   816  0009AA  4B69               	infsnz	(??_timerValue+2)& (0+255),f,b
   817  0009AC  2B6A               	incf	(??_timerValue+3)& (0+255),f,b
   818  0009AE  0100               	movlb	0	; () banked
   819  0009B0  5167               	movf	??_timerValue& (0+255),w,b
   820  0009B2  0100               	movlb	0	; () banked
   821  0009B4  2769               	addwf	(??_timerValue+2)& (0+255),f,b
   822  0009B6  0100               	movlb	0	; () banked
   823  0009B8  5168               	movf	(??_timerValue+1)& (0+255),w,b
   824  0009BA  0100               	movlb	0	; () banked
   825  0009BC  236A               	addwfc	(??_timerValue+3)& (0+255),f,b
   826  0009BE  0EFF               	movlw	255
   827  0009C0  0100               	movlb	0	; () banked
   828  0009C2  2569               	addwf	(??_timerValue+2)& (0+255),w,b
   829  0009C4  0100               	movlb	0	; () banked
   830  0009C6  6F6B               	movwf	timerValue@difTime& (0+255),b
   831  0009C8  0EFF               	movlw	255
   832  0009CA                     L1:
   833  0009CA  0100               	movlb	0	; () banked
   834  0009CC  216A               	addwfc	(??_timerValue+3)& (0+255),w,b
   835  0009CE  0100               	movlb	0	; () banked
   836  0009D0  6F6C               	movwf	(timerValue@difTime+1)& (0+255),b
   837                           
   838                           ; BSR set to: 0
   839                           ;comum.c: 58: return(difTime);
   840                           
   841                           ; BSR set to: 0
   842  0009D2  C06B  F060         	movff	timerValue@difTime,?_timerValue
   843  0009D6  C06C  F061         	movff	timerValue@difTime+1,?_timerValue+1
   844  0009DA  0012               	return	
   845  0009DC                     __end_of_timerValue:
   846                           	opt stack 0
   847                           tblptru	equ	0xFF8
   848                           tblptrh	equ	0xFF7
   849                           postinc0	equ	0xFEE
   850                           plusw0	equ	0xFEB
   851                           wreg	equ	0xFE8
   852                           postinc2	equ	0xFDE
   853                           postdec2	equ	0xFDD
   854                           plusw2	equ	0xFDB
   855                           fsr2h	equ	0xFDA
   856                           fsr2l	equ	0xFD9
   857                           status	equ	0xFD8
   858                           
   859 ;; *************** function _timerInit *****************
   860 ;; Defined at:
   861 ;;		line 34 in file "comum.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  ptrTimer        2    0[BANK0 ] PTR struct .
   864 ;;		 -> KeepAlive@timerKeepAlive(7), ledStatus@timerLedStatus(7), 
   865 ;;  timeoutValue    2    2[BANK0 ] const unsigned int 
   866 ;;  ptrSystemTim    2    4[BANK0 ] PTR const unsigned int 
   867 ;;		 -> sSystemTimers.timer1s(2), sSystemTimers.timer100ms(2), sSystemTimers(10), 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   879 ;;      Params:         0       6       0       0       0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0       0       0       0       0
   881 ;;      Temps:          0       2       0       0       0       0       0       0       0
   882 ;;      Totals:         0       8       0       0       0       0       0       0       0
   883 ;;Total ram usage:        8 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    4
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_ledStatus
   890 ;;		_KeepAlive
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text5
   895  000A74                     __ptext5:
   896                           	opt stack 0
   897  000A74                     _timerInit:
   898                           	opt stack 25
   899                           
   900                           ;comum.c: 36: ptrTimer->timeoutValue = timeoutValue;
   901                           
   902                           ; BSR set to: 0
   903                           ;incstack = 0
   904  000A74  0100               	movlb	0	; () banked
   905  000A76  EE20 F002          	lfsr	2,2
   906  000A7A  5160               	movf	timerInit@ptrTimer& (0+255),w,b
   907  000A7C  26D9               	addwf	fsr2l,f,c
   908  000A7E  5161               	movf	(timerInit@ptrTimer+1)& (0+255),w,b
   909  000A80  22DA               	addwfc	fsr2h,f,c
   910  000A82  C062  FFDE         	movff	timerInit@timeoutValue,postinc2
   911  000A86  C063  FFDD         	movff	timerInit@timeoutValue+1,postdec2
   912                           
   913                           ;comum.c: 38: ptrTimer->flgInitTimer = (timeoutValue >= (65535U)) ? 0 : 1;
   914  000A8A  0100               	movlb	0	; () banked
   915  000A8C  EE20 F004          	lfsr	2,4
   916  000A90  5160               	movf	timerInit@ptrTimer& (0+255),w,b
   917  000A92  26D9               	addwf	fsr2l,f,c
   918  000A94  5161               	movf	(timerInit@ptrTimer+1)& (0+255),w,b
   919  000A96  22DA               	addwfc	fsr2h,f,c
   920  000A98  0100               	movlb	0	; () banked
   921  000A9A  2962               	incf	timerInit@timeoutValue& (0+255),w,b
   922  000A9C  E104               	bnz	u681
   923  000A9E  0100               	movlb	0	; () banked
   924  000AA0  2963               	incf	(timerInit@timeoutValue+1)& (0+255),w,b
   925  000AA2  B4D8               	btfsc	status,2,c
   926  000AA4  D002               	goto	u680
   927  000AA6                     u681:
   928  000AA6  0E01               	movlw	1
   929  000AA8  D001               	goto	u690
   930  000AAA                     u680:
   931  000AAA  0E00               	movlw	0
   932  000AAC                     u690:
   933  000AAC  6EDF               	movwf	indf2,c
   934                           
   935                           ;comum.c: 39: ptrTimer->ptrSystemTimerValue = (uint16_t *) ptrSystemTimerValue;
   936  000AAE  0100               	movlb	0	; () banked
   937  000AB0  EE20 F005          	lfsr	2,5
   938  000AB4  5160               	movf	timerInit@ptrTimer& (0+255),w,b
   939  000AB6  26D9               	addwf	fsr2l,f,c
   940  000AB8  5161               	movf	(timerInit@ptrTimer+1)& (0+255),w,b
   941  000ABA  22DA               	addwfc	fsr2h,f,c
   942  000ABC  C064  FFDE         	movff	timerInit@ptrSystemTimerValue,postinc2
   943  000AC0  C065  FFDD         	movff	timerInit@ptrSystemTimerValue+1,postdec2
   944                           
   945                           ; BSR set to: 0
   946                           ;comum.c: 41: ptrTimer->startTime = *(ptrTimer->ptrSystemTimerValue);
   947  000AC4  0100               	movlb	0	; () banked
   948  000AC6  EE20 F005          	lfsr	2,5
   949  000ACA  5160               	movf	timerInit@ptrTimer& (0+255),w,b
   950  000ACC  26D9               	addwf	fsr2l,f,c
   951  000ACE  5161               	movf	(timerInit@ptrTimer+1)& (0+255),w,b
   952  000AD0  22DA               	addwfc	fsr2h,f,c
   953  000AD2  CFDE F066          	movff	postinc2,??_timerInit
   954  000AD6  CFDD F067          	movff	postdec2,??_timerInit+1
   955  000ADA  C066  FFD9         	movff	??_timerInit,fsr2l
   956  000ADE  C067  FFDA         	movff	??_timerInit+1,fsr2h
   957  000AE2  C060  FFE1         	movff	timerInit@ptrTimer,fsr1l
   958  000AE6  C061  FFE2         	movff	timerInit@ptrTimer+1,fsr1h
   959  000AEA  CFDE FFE6          	movff	postinc2,postinc1
   960  000AEE  CFDD FFE5          	movff	postdec2,postdec1
   961                           
   962                           ; BSR set to: 0
   963  000AF2  0012               	return		;funcret
   964  000AF4                     __end_of_timerInit:
   965                           	opt stack 0
   966                           tblptru	equ	0xFF8
   967                           tblptrh	equ	0xFF7
   968                           postinc0	equ	0xFEE
   969                           plusw0	equ	0xFEB
   970                           wreg	equ	0xFE8
   971                           postinc1	equ	0xFE6
   972                           postdec1	equ	0xFE5
   973                           fsr1h	equ	0xFE2
   974                           fsr1l	equ	0xFE1
   975                           indf2	equ	0xFDF
   976                           postinc2	equ	0xFDE
   977                           postdec2	equ	0xFDD
   978                           plusw2	equ	0xFDB
   979                           fsr2h	equ	0xFDA
   980                           fsr2l	equ	0xFD9
   981                           status	equ	0xFD8
   982                           
   983 ;; *************** function _putsUsart *****************
   984 ;; Defined at:
   985 ;;		line 80 in file "usart.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  s               2    1[BANK0 ] PTR unsigned char 
   988 ;;		 -> STR_4(23), STR_3(17), STR_2(10), STR_1(9), 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1000 ;;      Params:         0       2       0       0       0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1003 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1004 ;;Total ram usage:        2 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    5
  1007 ;; This function calls:
  1008 ;;		_putUsart
  1009 ;; This function is called by:
  1010 ;;		_ledStatus
  1011 ;;		_KeepAlive
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text6
  1017  000C46                     __ptext6:
  1018                           	opt stack 0
  1019  000C46                     _putsUsart:
  1020                           	opt stack 25
  1021                           
  1022                           ;usart.c: 83: while (*s)
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;incstack = 0
  1026  000C46  D00B               	goto	l1169
  1027  000C48                     l1165:
  1028                           
  1029                           ;usart.c: 84: putUsart(*s++);
  1030  000C48  C061  FFF6         	movff	putsUsart@s,tblptrl
  1031  000C4C  C062  FFF7         	movff	putsUsart@s+1,tblptrh
  1032  000C50                     	if	0	;tblptru may be non-zero
  1033  000C50                     	endif
  1034  000C50                     	if	0	;tblptru may be non-zero
  1035  000C50                     	endif
  1036  000C50  0008               	tblrd		*
  1037  000C52  50F5               	movf	tablat,w,c
  1038  000C54  EC7D  F006         	call	_putUsart
  1039  000C58  0100               	movlb	0	; () banked
  1040  000C5A  4B61               	infsnz	putsUsart@s& (0+255),f,b
  1041  000C5C  2B62               	incf	(putsUsart@s+1)& (0+255),f,b
  1042  000C5E                     l1169:
  1043  000C5E  C061  FFF6         	movff	putsUsart@s,tblptrl
  1044  000C62  C062  FFF7         	movff	putsUsart@s+1,tblptrh
  1045  000C66                     	if	0	;tblptru may be non-zero
  1046  000C66                     	endif
  1047  000C66                     	if	0	;tblptru may be non-zero
  1048  000C66                     	endif
  1049  000C66  0008               	tblrd		*
  1050  000C68  50F5               	movf	tablat,w,c
  1051  000C6A  0900               	iorlw	0
  1052  000C6C  B4D8               	btfsc	status,2,c
  1053  000C6E  0012               	return	
  1054  000C70  D7EB               	goto	l1165
  1055  000C72                     __end_of_putsUsart:
  1056                           	opt stack 0
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           postinc0	equ	0xFEE
  1062                           plusw0	equ	0xFEB
  1063                           wreg	equ	0xFE8
  1064                           postinc1	equ	0xFE6
  1065                           postdec1	equ	0xFE5
  1066                           fsr1h	equ	0xFE2
  1067                           fsr1l	equ	0xFE1
  1068                           indf2	equ	0xFDF
  1069                           postinc2	equ	0xFDE
  1070                           postdec2	equ	0xFDD
  1071                           plusw2	equ	0xFDB
  1072                           fsr2h	equ	0xFDA
  1073                           fsr2l	equ	0xFD9
  1074                           status	equ	0xFD8
  1075                           
  1076 ;; *************** function _putUsart *****************
  1077 ;; Defined at:
  1078 ;;		line 66 in file "usart.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  c               1    wreg     unsigned char 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  c               1    0[BANK0 ] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0
  1093 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1095 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1096 ;;Total ram usage:        1 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    4
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_putsUsart
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text7
  1107  000CFA                     __ptext7:
  1108                           	opt stack 0
  1109  000CFA                     _putUsart:
  1110                           	opt stack 25
  1111                           
  1112                           ;incstack = 0
  1113                           ;putUsart@c stored from wreg
  1114  000CFA  0100               	movlb	0	; () banked
  1115  000CFC  6F60               	movwf	putUsart@c& (0+255),b
  1116  000CFE                     l69:
  1117  000CFE  A2AC               	btfss	4012,1,c	;volatile
  1118  000D00  D7FE               	goto	l69
  1119                           
  1120                           ;usart.c: 69: TXREG = c;
  1121  000D02  C060  FFAD         	movff	putUsart@c,4013	;volatile
  1122  000D06  0012               	return		;funcret
  1123  000D08                     __end_of_putUsart:
  1124                           	opt stack 0
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           postinc0	equ	0xFEE
  1130                           plusw0	equ	0xFEB
  1131                           wreg	equ	0xFE8
  1132                           postinc1	equ	0xFE6
  1133                           postdec1	equ	0xFE5
  1134                           fsr1h	equ	0xFE2
  1135                           fsr1l	equ	0xFE1
  1136                           indf2	equ	0xFDF
  1137                           postinc2	equ	0xFDE
  1138                           postdec2	equ	0xFDD
  1139                           plusw2	equ	0xFDB
  1140                           fsr2h	equ	0xFDA
  1141                           fsr2l	equ	0xFD9
  1142                           status	equ	0xFD8
  1143                           
  1144 ;; *************** function _InitMCU *****************
  1145 ;; Defined at:
  1146 ;;		line 99 in file "main.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1160 ;;      Params:         0       0       0       0       0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    5
  1167 ;; This function calls:
  1168 ;;		_InitTimer
  1169 ;;		_initUsart
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text8
  1176  000CE4                     __ptext8:
  1177                           	opt stack 0
  1178  000CE4                     _InitMCU:
  1179                           	opt stack 25
  1180                           
  1181                           ;main.c: 102: TRISBbits.TRISB5 = 0;
  1182                           
  1183                           ;incstack = 0
  1184  000CE4  9A93               	bcf	3987,5,c	;volatile
  1185                           
  1186                           ;main.c: 103: PORTBbits.RB5 = 0;
  1187  000CE6  9A81               	bcf	3969,5,c	;volatile
  1188                           
  1189                           ;main.c: 105: TRISBbits.TRISB4 = 0;
  1190  000CE8  9893               	bcf	3987,4,c	;volatile
  1191                           
  1192                           ;main.c: 106: PORTBbits.RB4 = 0;
  1193  000CEA  9881               	bcf	3969,4,c	;volatile
  1194                           
  1195                           ;main.c: 108: TRISBbits.TRISB3 = 1;
  1196  000CEC  8693               	bsf	3987,3,c	;volatile
  1197                           
  1198                           ;main.c: 109: TRISBbits.TRISB3 = 0;
  1199  000CEE  9693               	bcf	3987,3,c	;volatile
  1200                           
  1201                           ;main.c: 112: initUsart();
  1202  000CF0  EC65  F006         	call	_initUsart	;wreg free
  1203                           
  1204                           ;main.c: 114: InitTimer();
  1205  000CF4  EC57  F006         	call	_InitTimer	;wreg free
  1206  000CF8  0012               	return		;funcret
  1207  000CFA                     __end_of_InitMCU:
  1208                           	opt stack 0
  1209                           tblptru	equ	0xFF8
  1210                           tblptrh	equ	0xFF7
  1211                           tblptrl	equ	0xFF6
  1212                           tablat	equ	0xFF5
  1213                           postinc0	equ	0xFEE
  1214                           plusw0	equ	0xFEB
  1215                           wreg	equ	0xFE8
  1216                           postinc1	equ	0xFE6
  1217                           postdec1	equ	0xFE5
  1218                           fsr1h	equ	0xFE2
  1219                           fsr1l	equ	0xFE1
  1220                           indf2	equ	0xFDF
  1221                           postinc2	equ	0xFDE
  1222                           postdec2	equ	0xFDD
  1223                           plusw2	equ	0xFDB
  1224                           fsr2h	equ	0xFDA
  1225                           fsr2l	equ	0xFD9
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _initUsart *****************
  1229 ;; Defined at:
  1230 ;;		line 42 in file "usart.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1244 ;;      Params:         0       0       0       0       0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    4
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_InitMCU
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text9
  1259  000CCA                     __ptext9:
  1260                           	opt stack 0
  1261  000CCA                     _initUsart:
  1262                           	opt stack 25
  1263                           
  1264                           ;usart.c: 53: TRISCbits.TRISC6 = 0;
  1265                           
  1266                           ;incstack = 0
  1267  000CCA  9C94               	bcf	3988,6,c	;volatile
  1268                           
  1269                           ;usart.c: 54: TRISCbits.TRISC7 = 1;
  1270  000CCC  8E94               	bsf	3988,7,c	;volatile
  1271                           
  1272                           ;usart.c: 57: BAUDCON = 0b00001000;
  1273  000CCE  0E08               	movlw	8
  1274  000CD0  6EB8               	movwf	4024,c	;volatile
  1275                           
  1276                           ;usart.c: 58: SPBRGH = 0;
  1277  000CD2  0E00               	movlw	0
  1278  000CD4  6EB0               	movwf	4016,c	;volatile
  1279                           
  1280                           ;usart.c: 59: SPBRG = 25;
  1281  000CD6  0E19               	movlw	25
  1282  000CD8  6EAF               	movwf	4015,c	;volatile
  1283                           
  1284                           ;usart.c: 60: RCSTA = 0b10010000;
  1285  000CDA  0E90               	movlw	144
  1286  000CDC  6EAB               	movwf	4011,c	;volatile
  1287                           
  1288                           ;usart.c: 61: TXSTA = 0b00100000;
  1289  000CDE  0E20               	movlw	32
  1290  000CE0  6EAC               	movwf	4012,c	;volatile
  1291  000CE2  0012               	return		;funcret
  1292  000CE4                     __end_of_initUsart:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           postinc0	equ	0xFEE
  1299                           plusw0	equ	0xFEB
  1300                           wreg	equ	0xFE8
  1301                           postinc1	equ	0xFE6
  1302                           postdec1	equ	0xFE5
  1303                           fsr1h	equ	0xFE2
  1304                           fsr1l	equ	0xFE1
  1305                           indf2	equ	0xFDF
  1306                           postinc2	equ	0xFDE
  1307                           postdec2	equ	0xFDD
  1308                           plusw2	equ	0xFDB
  1309                           fsr2h	equ	0xFDA
  1310                           fsr2l	equ	0xFD9
  1311                           status	equ	0xFD8
  1312                           
  1313 ;; *************** function _InitTimer *****************
  1314 ;; Defined at:
  1315 ;;		line 42 in file "Interrupt.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;		None
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1329 ;;      Params:         0       0       0       0       0       0       0       0       0
  1330 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1332 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1333 ;;Total ram usage:        0 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    4
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_InitMCU
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text10
  1344  000CAE                     __ptext10:
  1345                           	opt stack 0
  1346  000CAE                     _InitTimer:
  1347                           	opt stack 25
  1348                           
  1349                           ;Interrupt.c: 46: T1CON = 0x01;
  1350                           
  1351                           ;incstack = 0
  1352  000CAE  0E01               	movlw	1
  1353  000CB0  6ECD               	movwf	4045,c	;volatile
  1354                           
  1355                           ;Interrupt.c: 47: PIE1bits.TMR1IE = 0;
  1356  000CB2  909D               	bcf	3997,0,c	;volatile
  1357                           
  1358                           ;Interrupt.c: 48: INTCONbits.PEIE = 1;
  1359  000CB4  8CF2               	bsf	intcon,6,c	;volatile
  1360                           
  1361                           ;Interrupt.c: 49: RCONbits.IPEN=0x01;
  1362  000CB6  8ED0               	bsf	4048,7,c	;volatile
  1363                           
  1364                           ;Interrupt.c: 50: IPR1bits.TMR1IP=0x01;
  1365  000CB8  809F               	bsf	3999,0,c	;volatile
  1366                           
  1367                           ;Interrupt.c: 51: INTCONbits.GIE = 1;
  1368  000CBA  8EF2               	bsf	intcon,7,c	;volatile
  1369                           
  1370                           ;Interrupt.c: 52: PIR1bits.TMR1IF = 0;
  1371  000CBC  909E               	bcf	3998,0,c	;volatile
  1372                           
  1373                           ;Interrupt.c: 53: T0CON=0X00;
  1374  000CBE  0E00               	movlw	0
  1375  000CC0  6ED5               	movwf	4053,c	;volatile
  1376                           
  1377                           ;Interrupt.c: 54: INTCONbits.T0IE = 1;
  1378  000CC2  8AF2               	bsf	intcon,5,c	;volatile
  1379                           
  1380                           ;Interrupt.c: 55: INTCON2bits.TMR0IP=0x00;
  1381  000CC4  94F1               	bcf	intcon2,2,c	;volatile
  1382                           
  1383                           ;Interrupt.c: 56: T0CONbits.TMR0ON = 1;
  1384  000CC6  8ED5               	bsf	4053,7,c	;volatile
  1385  000CC8  0012               	return		;funcret
  1386  000CCA                     __end_of_InitTimer:
  1387                           	opt stack 0
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           intcon	equ	0xFF2
  1393                           intcon2	equ	0xFF1
  1394                           postinc0	equ	0xFEE
  1395                           plusw0	equ	0xFEB
  1396                           wreg	equ	0xFE8
  1397                           postinc1	equ	0xFE6
  1398                           postdec1	equ	0xFE5
  1399                           fsr1h	equ	0xFE2
  1400                           fsr1l	equ	0xFE1
  1401                           indf2	equ	0xFDF
  1402                           postinc2	equ	0xFDE
  1403                           postdec2	equ	0xFDD
  1404                           plusw2	equ	0xFDB
  1405                           fsr2h	equ	0xFDA
  1406                           fsr2l	equ	0xFD9
  1407                           status	equ	0xFD8
  1408                           
  1409 ;; *************** function _LowIsr *****************
  1410 ;; Defined at:
  1411 ;;		line 69 in file "Interrupt.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1425 ;;      Params:         0       0       0       0       0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1427 ;;      Temps:         17       0       0       0       0       0       0       0       0
  1428 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1429 ;;Total ram usage:       17 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    3
  1432 ;; This function calls:
  1433 ;;		_SystemTimers
  1434 ;; This function is called by:
  1435 ;;		Interrupt level 1
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	intcodelo
  1440  000018                     __pintcodelo:
  1441                           	opt stack 0
  1442  000018                     _LowIsr:
  1443                           	opt stack 24
  1444                           
  1445                           ;incstack = 0
  1446  000018  803D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1447  00001A  CFD8 F014          	movff	status,??_LowIsr
  1448  00001E  CFE8 F015          	movff	wreg,??_LowIsr+1
  1449  000022  CFE0 F016          	movff	bsr,??_LowIsr+2
  1450  000026  CFFA F017          	movff	pclath,??_LowIsr+3
  1451  00002A  CFFB F018          	movff	pclatu,??_LowIsr+4
  1452  00002E  CFE9 F019          	movff	fsr0l,??_LowIsr+5
  1453  000032  CFEA F01A          	movff	fsr0h,??_LowIsr+6
  1454  000036  CFE1 F01B          	movff	fsr1l,??_LowIsr+7
  1455  00003A  CFE2 F01C          	movff	fsr1h,??_LowIsr+8
  1456  00003E  CFD9 F01D          	movff	fsr2l,??_LowIsr+9
  1457  000042  CFDA F01E          	movff	fsr2h,??_LowIsr+10
  1458  000046  CFF3 F01F          	movff	prodl,??_LowIsr+11
  1459  00004A  CFF4 F020          	movff	prodh,??_LowIsr+12
  1460  00004E  CFF6 F021          	movff	tblptrl,??_LowIsr+13
  1461  000052  CFF7 F022          	movff	tblptrh,??_LowIsr+14
  1462  000056  CFF8 F023          	movff	tblptru,??_LowIsr+15
  1463  00005A  CFF5 F024          	movff	tablat,??_LowIsr+16
  1464                           
  1465                           ;Interrupt.c: 72: if(INTCONbits.T0IF && INTCONbits.T0IE)
  1466  00005E  B4F2               	btfsc	intcon,2,c	;volatile
  1467  000060  AAF2               	btfss	intcon,5,c	;volatile
  1468  000062  D007               	goto	i1l129
  1469                           
  1470                           ;Interrupt.c: 73: {
  1471                           ;Interrupt.c: 75: TMR0 = 59535;
  1472  000064  0EE8               	movlw	232
  1473  000066  6ED7               	movwf	4055,c	;volatile
  1474  000068  0E8F               	movlw	143
  1475  00006A  6ED6               	movwf	4054,c	;volatile
  1476                           
  1477                           ;Interrupt.c: 76: INTCONbits.T0IF = 0;
  1478  00006C  94F2               	bcf	intcon,2,c	;volatile
  1479                           
  1480                           ;Interrupt.c: 78: SystemTimers();
  1481  00006E  EC1F  F004         	call	_SystemTimers	;wreg free
  1482  000072                     i1l129:
  1483  000072  C024  FFF5         	movff	??_LowIsr+16,tablat
  1484  000076  C023  FFF8         	movff	??_LowIsr+15,tblptru
  1485  00007A  C022  FFF7         	movff	??_LowIsr+14,tblptrh
  1486  00007E  C021  FFF6         	movff	??_LowIsr+13,tblptrl
  1487  000082  C020  FFF4         	movff	??_LowIsr+12,prodh
  1488  000086  C01F  FFF3         	movff	??_LowIsr+11,prodl
  1489  00008A  C01E  FFDA         	movff	??_LowIsr+10,fsr2h
  1490  00008E  C01D  FFD9         	movff	??_LowIsr+9,fsr2l
  1491  000092  C01C  FFE2         	movff	??_LowIsr+8,fsr1h
  1492  000096  C01B  FFE1         	movff	??_LowIsr+7,fsr1l
  1493  00009A  C01A  FFEA         	movff	??_LowIsr+6,fsr0h
  1494  00009E  C019  FFE9         	movff	??_LowIsr+5,fsr0l
  1495  0000A2  C018  FFFB         	movff	??_LowIsr+4,pclatu
  1496  0000A6  C017  FFFA         	movff	??_LowIsr+3,pclath
  1497  0000AA  C016  FFE0         	movff	??_LowIsr+2,bsr
  1498  0000AE  C015  FFE8         	movff	??_LowIsr+1,wreg
  1499  0000B2  C014  FFD8         	movff	??_LowIsr,status
  1500  0000B6  903D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1501  0000B8  0010               	retfie	
  1502  0000BA                     __end_of_LowIsr:
  1503                           	opt stack 0
  1504                           pclatu	equ	0xFFB
  1505                           pclath	equ	0xFFA
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           prodh	equ	0xFF4
  1511                           prodl	equ	0xFF3
  1512                           intcon	equ	0xFF2
  1513                           intcon2	equ	0xFF1
  1514                           postinc0	equ	0xFEE
  1515                           plusw0	equ	0xFEB
  1516                           fsr0h	equ	0xFEA
  1517                           fsr0l	equ	0xFE9
  1518                           wreg	equ	0xFE8
  1519                           postinc1	equ	0xFE6
  1520                           postdec1	equ	0xFE5
  1521                           fsr1h	equ	0xFE2
  1522                           fsr1l	equ	0xFE1
  1523                           bsr	equ	0xFE0
  1524                           indf2	equ	0xFDF
  1525                           postinc2	equ	0xFDE
  1526                           postdec2	equ	0xFDD
  1527                           plusw2	equ	0xFDB
  1528                           fsr2h	equ	0xFDA
  1529                           fsr2l	equ	0xFD9
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function _SystemTimers *****************
  1533 ;; Defined at:
  1534 ;;		line 73 in file "comum.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1551 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    2
  1555 ;; This function calls:
  1556 ;;		___lwmod
  1557 ;; This function is called by:
  1558 ;;		_LowIsr
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text12
  1563  00083E                     __ptext12:
  1564                           	opt stack 0
  1565  00083E                     _SystemTimers:
  1566                           	opt stack 24
  1567                           
  1568                           ;comum.c: 76: sSystemTimers.timer1ms == (65535U)
  1569                           ;comum.c: 77: ? (sSystemTimers.timer1ms = 0)
  1570                           ;comum.c: 78: : sSystemTimers.timer1ms++;
  1571                           
  1572                           ;incstack = 0
  1573  00083E  2825               	incf	_sSystemTimers,w,c
  1574  000840  E108               	bnz	i1l1063
  1575  000842  2826               	incf	_sSystemTimers+1,w,c
  1576  000844  A4D8               	btfss	status,2,c
  1577  000846  D005               	goto	i1l1063
  1578  000848  0E00               	movlw	0
  1579  00084A  6E26               	movwf	_sSystemTimers+1,c
  1580  00084C  0E00               	movlw	0
  1581  00084E  6E25               	movwf	_sSystemTimers,c
  1582  000850  D002               	goto	i1l1065
  1583  000852                     i1l1063:
  1584  000852  4A25               	infsnz	_sSystemTimers,f,c
  1585  000854  2A26               	incf	_sSystemTimers+1,f,c
  1586  000856                     i1l1065:
  1587                           
  1588                           ;comum.c: 81: if(!(sSystemTimers.timer1ms % 10))
  1589  000856  C025  F00F         	movff	_sSystemTimers,___lwmod@dividend
  1590  00085A  C026  F010         	movff	_sSystemTimers+1,___lwmod@dividend+1
  1591  00085E  0E00               	movlw	0
  1592  000860  6E12               	movwf	___lwmod@divisor+1,c
  1593  000862  0E0A               	movlw	10
  1594  000864  6E11               	movwf	___lwmod@divisor,c
  1595  000866  ECE9  F005         	call	___lwmod	;wreg free
  1596  00086A  500F               	movf	?___lwmod,w,c
  1597  00086C  1010               	iorwf	?___lwmod+1,w,c
  1598  00086E  A4D8               	btfss	status,2,c
  1599  000870  D00C               	goto	i1l1073
  1600                           
  1601                           ;comum.c: 82: sSystemTimers.timer10ms == (65535U)
  1602                           ;comum.c: 83: ? (sSystemTimers.timer10ms = 0)
  1603                           ;comum.c: 84: : sSystemTimers.timer10ms++;
  1604  000872  2827               	incf	_sSystemTimers+2,w,c
  1605  000874  E108               	bnz	i1l1071
  1606  000876  2828               	incf	_sSystemTimers+3,w,c
  1607  000878  A4D8               	btfss	status,2,c
  1608  00087A  D005               	goto	i1l1071
  1609  00087C  0E00               	movlw	0
  1610  00087E  6E28               	movwf	_sSystemTimers+3,c
  1611  000880  0E00               	movlw	0
  1612  000882  6E27               	movwf	_sSystemTimers+2,c
  1613  000884  D002               	goto	i1l1073
  1614  000886                     i1l1071:
  1615  000886  4A27               	infsnz	_sSystemTimers+2,f,c
  1616  000888  2A28               	incf	_sSystemTimers+3,f,c
  1617  00088A                     i1l1073:
  1618                           
  1619                           ;comum.c: 87: if(!(sSystemTimers.timer1ms % 100))
  1620  00088A  C025  F00F         	movff	_sSystemTimers,___lwmod@dividend
  1621  00088E  C026  F010         	movff	_sSystemTimers+1,___lwmod@dividend+1
  1622  000892  0E00               	movlw	0
  1623  000894  6E12               	movwf	___lwmod@divisor+1,c
  1624  000896  0E64               	movlw	100
  1625  000898  6E11               	movwf	___lwmod@divisor,c
  1626  00089A  ECE9  F005         	call	___lwmod	;wreg free
  1627  00089E  500F               	movf	?___lwmod,w,c
  1628  0008A0  1010               	iorwf	?___lwmod+1,w,c
  1629  0008A2  A4D8               	btfss	status,2,c
  1630  0008A4  D00C               	goto	i1l1081
  1631                           
  1632                           ;comum.c: 88: sSystemTimers.timer100ms == (65535U)
  1633                           ;comum.c: 89: ? (sSystemTimers.timer100ms = 0)
  1634                           ;comum.c: 90: : sSystemTimers.timer100ms++;
  1635  0008A6  2829               	incf	_sSystemTimers+4,w,c
  1636  0008A8  E108               	bnz	i1l1079
  1637  0008AA  282A               	incf	_sSystemTimers+5,w,c
  1638  0008AC  A4D8               	btfss	status,2,c
  1639  0008AE  D005               	goto	i1l1079
  1640  0008B0  0E00               	movlw	0
  1641  0008B2  6E2A               	movwf	_sSystemTimers+5,c
  1642  0008B4  0E00               	movlw	0
  1643  0008B6  6E29               	movwf	_sSystemTimers+4,c
  1644  0008B8  D002               	goto	i1l1081
  1645  0008BA                     i1l1079:
  1646  0008BA  4A29               	infsnz	_sSystemTimers+4,f,c
  1647  0008BC  2A2A               	incf	_sSystemTimers+5,f,c
  1648  0008BE                     i1l1081:
  1649                           
  1650                           ;comum.c: 93: if(!(sSystemTimers.timer1ms % 1000))
  1651  0008BE  C025  F00F         	movff	_sSystemTimers,___lwmod@dividend
  1652  0008C2  C026  F010         	movff	_sSystemTimers+1,___lwmod@dividend+1
  1653  0008C6  0E03               	movlw	3
  1654  0008C8  6E12               	movwf	___lwmod@divisor+1,c
  1655  0008CA  0EE8               	movlw	232
  1656  0008CC  6E11               	movwf	___lwmod@divisor,c
  1657  0008CE  ECE9  F005         	call	___lwmod	;wreg free
  1658  0008D2  500F               	movf	?___lwmod,w,c
  1659  0008D4  1010               	iorwf	?___lwmod+1,w,c
  1660  0008D6  A4D8               	btfss	status,2,c
  1661  0008D8  D00C               	goto	i1l1089
  1662                           
  1663                           ;comum.c: 94: sSystemTimers.timer1s == (65535U)
  1664                           ;comum.c: 95: ? sSystemTimers.timer1s = 0
  1665                           ;comum.c: 96: : sSystemTimers.timer1s++;
  1666  0008DA  282B               	incf	_sSystemTimers+6,w,c
  1667  0008DC  E108               	bnz	i1l1087
  1668  0008DE  282C               	incf	_sSystemTimers+7,w,c
  1669  0008E0  A4D8               	btfss	status,2,c
  1670  0008E2  D005               	goto	i1l1087
  1671  0008E4  0E00               	movlw	0
  1672  0008E6  6E2C               	movwf	_sSystemTimers+7,c
  1673  0008E8  0E00               	movlw	0
  1674  0008EA  6E2B               	movwf	_sSystemTimers+6,c
  1675  0008EC  D002               	goto	i1l1089
  1676  0008EE                     i1l1087:
  1677  0008EE  4A2B               	infsnz	_sSystemTimers+6,f,c
  1678  0008F0  2A2C               	incf	_sSystemTimers+7,f,c
  1679  0008F2                     i1l1089:
  1680                           
  1681                           ;comum.c: 99: if(!(sSystemTimers.timer1s % 60))
  1682  0008F2  C02B  F00F         	movff	_sSystemTimers+6,___lwmod@dividend
  1683  0008F6  C02C  F010         	movff	_sSystemTimers+7,___lwmod@dividend+1
  1684  0008FA  0E00               	movlw	0
  1685  0008FC  6E12               	movwf	___lwmod@divisor+1,c
  1686  0008FE  0E3C               	movlw	60
  1687  000900  6E11               	movwf	___lwmod@divisor,c
  1688  000902  ECE9  F005         	call	___lwmod	;wreg free
  1689  000906  500F               	movf	?___lwmod,w,c
  1690  000908  1010               	iorwf	?___lwmod+1,w,c
  1691  00090A  A4D8               	btfss	status,2,c
  1692  00090C  0012               	return	
  1693                           
  1694                           ;comum.c: 100: sSystemTimers.timer1min == (65535U)
  1695                           ;comum.c: 101: ? sSystemTimers.timer1min = 0
  1696                           ;comum.c: 102: : sSystemTimers.timer1min++;
  1697  00090E  282D               	incf	_sSystemTimers+8,w,c
  1698  000910  E108               	bnz	i1l1095
  1699  000912  282E               	incf	_sSystemTimers+9,w,c
  1700  000914  A4D8               	btfss	status,2,c
  1701  000916  D005               	goto	i1l1095
  1702  000918  0E00               	movlw	0
  1703  00091A  6E2E               	movwf	_sSystemTimers+9,c
  1704  00091C  0E00               	movlw	0
  1705  00091E  6E2D               	movwf	_sSystemTimers+8,c
  1706  000920  0012               	return	
  1707  000922                     i1l1095:
  1708  000922  4A2D               	infsnz	_sSystemTimers+8,f,c
  1709  000924  2A2E               	incf	_sSystemTimers+9,f,c
  1710  000926  0012               	return	
  1711  000928                     __end_of_SystemTimers:
  1712                           	opt stack 0
  1713                           pclatu	equ	0xFFB
  1714                           pclath	equ	0xFFA
  1715                           tblptru	equ	0xFF8
  1716                           tblptrh	equ	0xFF7
  1717                           tblptrl	equ	0xFF6
  1718                           tablat	equ	0xFF5
  1719                           prodh	equ	0xFF4
  1720                           prodl	equ	0xFF3
  1721                           intcon	equ	0xFF2
  1722                           intcon2	equ	0xFF1
  1723                           postinc0	equ	0xFEE
  1724                           plusw0	equ	0xFEB
  1725                           fsr0h	equ	0xFEA
  1726                           fsr0l	equ	0xFE9
  1727                           wreg	equ	0xFE8
  1728                           postinc1	equ	0xFE6
  1729                           postdec1	equ	0xFE5
  1730                           fsr1h	equ	0xFE2
  1731                           fsr1l	equ	0xFE1
  1732                           bsr	equ	0xFE0
  1733                           indf2	equ	0xFDF
  1734                           postinc2	equ	0xFDE
  1735                           postdec2	equ	0xFDD
  1736                           plusw2	equ	0xFDB
  1737                           fsr2h	equ	0xFDA
  1738                           fsr2l	equ	0xFD9
  1739                           status	equ	0xFD8
  1740                           
  1741 ;; *************** function ___lwmod *****************
  1742 ;; Defined at:
  1743 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  dividend        2   14[COMRAM] unsigned int 
  1746 ;;  divisor         2   16[COMRAM] unsigned int 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  counter         1   18[COMRAM] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  2   14[COMRAM] unsigned int 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1758 ;;      Params:         4       0       0       0       0       0       0       0       0
  1759 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1761 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1762 ;;Total ram usage:        5 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_SystemTimers
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text13
  1773  000BD2                     __ptext13:
  1774                           	opt stack 0
  1775  000BD2                     ___lwmod:
  1776                           	opt stack 24
  1777                           
  1778                           ;incstack = 0
  1779  000BD2  5011               	movf	___lwmod@divisor,w,c
  1780  000BD4  1012               	iorwf	___lwmod@divisor+1,w,c
  1781  000BD6  B4D8               	btfsc	status,2,c
  1782  000BD8  D018               	goto	i1l586
  1783  000BDA  0E01               	movlw	1
  1784  000BDC  6E13               	movwf	___lwmod@counter,c
  1785  000BDE  D004               	goto	i1l1023
  1786  000BE0                     i1l1021:
  1787  000BE0  90D8               	bcf	status,0,c
  1788  000BE2  3611               	rlcf	___lwmod@divisor,f,c
  1789  000BE4  3612               	rlcf	___lwmod@divisor+1,f,c
  1790  000BE6  2A13               	incf	___lwmod@counter,f,c
  1791  000BE8                     i1l1023:
  1792  000BE8  AE12               	btfss	___lwmod@divisor+1,7,c
  1793  000BEA  D7FA               	goto	i1l1021
  1794  000BEC                     i1l1025:
  1795  000BEC  5011               	movf	___lwmod@divisor,w,c
  1796  000BEE  5C0F               	subwf	___lwmod@dividend,w,c
  1797  000BF0  5012               	movf	___lwmod@divisor+1,w,c
  1798  000BF2  5810               	subwfb	___lwmod@dividend+1,w,c
  1799  000BF4  A0D8               	btfss	status,0,c
  1800  000BF6  D004               	goto	i1l1029
  1801  000BF8  5011               	movf	___lwmod@divisor,w,c
  1802  000BFA  5E0F               	subwf	___lwmod@dividend,f,c
  1803  000BFC  5012               	movf	___lwmod@divisor+1,w,c
  1804  000BFE  5A10               	subwfb	___lwmod@dividend+1,f,c
  1805  000C00                     i1l1029:
  1806  000C00  90D8               	bcf	status,0,c
  1807  000C02  3212               	rrcf	___lwmod@divisor+1,f,c
  1808  000C04  3211               	rrcf	___lwmod@divisor,f,c
  1809  000C06  2E13               	decfsz	___lwmod@counter,f,c
  1810  000C08  D7F1               	goto	i1l1025
  1811  000C0A                     i1l586:
  1812  000C0A  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1813  000C0E  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1814  000C12  0012               	return		;funcret
  1815  000C14                     __end_of___lwmod:
  1816                           	opt stack 0
  1817                           pclatu	equ	0xFFB
  1818                           pclath	equ	0xFFA
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           prodh	equ	0xFF4
  1824                           prodl	equ	0xFF3
  1825                           intcon	equ	0xFF2
  1826                           intcon2	equ	0xFF1
  1827                           postinc0	equ	0xFEE
  1828                           plusw0	equ	0xFEB
  1829                           fsr0h	equ	0xFEA
  1830                           fsr0l	equ	0xFE9
  1831                           wreg	equ	0xFE8
  1832                           postinc1	equ	0xFE6
  1833                           postdec1	equ	0xFE5
  1834                           fsr1h	equ	0xFE2
  1835                           fsr1l	equ	0xFE1
  1836                           bsr	equ	0xFE0
  1837                           indf2	equ	0xFDF
  1838                           postinc2	equ	0xFDE
  1839                           postdec2	equ	0xFDD
  1840                           plusw2	equ	0xFDB
  1841                           fsr2h	equ	0xFDA
  1842                           fsr2l	equ	0xFD9
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function _tc_int *****************
  1846 ;; Defined at:
  1847 ;;		line 59 in file "Interrupt.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		None
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1863 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1864 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1865 ;;Total ram usage:       14 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		Interrupt level 2
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	intcode
  1875  000008                     __pintcode:
  1876                           	opt stack 0
  1877  000008                     _tc_int:
  1878                           	opt stack 24
  1879                           
  1880                           ;incstack = 0
  1881  000008  823D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1882  00000A  ED7A  F005         	call	int_func,f	;refresh shadow registers
  1883                           pclatu	equ	0xFFB
  1884                           pclath	equ	0xFFA
  1885                           tblptru	equ	0xFF8
  1886                           tblptrh	equ	0xFF7
  1887                           tblptrl	equ	0xFF6
  1888                           tablat	equ	0xFF5
  1889                           prodh	equ	0xFF4
  1890                           prodl	equ	0xFF3
  1891                           intcon	equ	0xFF2
  1892                           intcon2	equ	0xFF1
  1893                           postinc0	equ	0xFEE
  1894                           plusw0	equ	0xFEB
  1895                           fsr0h	equ	0xFEA
  1896                           fsr0l	equ	0xFE9
  1897                           wreg	equ	0xFE8
  1898                           postinc1	equ	0xFE6
  1899                           postdec1	equ	0xFE5
  1900                           fsr1h	equ	0xFE2
  1901                           fsr1l	equ	0xFE1
  1902                           bsr	equ	0xFE0
  1903                           indf2	equ	0xFDF
  1904                           postinc2	equ	0xFDE
  1905                           postdec2	equ	0xFDD
  1906                           plusw2	equ	0xFDB
  1907                           fsr2h	equ	0xFDA
  1908                           fsr2l	equ	0xFD9
  1909                           status	equ	0xFD8
  1910                           
  1911                           	psect	intcode_body
  1912  000AF4                     __pintcode_body:
  1913                           	opt stack 24
  1914  000AF4                     int_func:
  1915                           	opt stack 24
  1916  000AF4  0006               	pop		; remove dummy address from shadow register refresh
  1917  000AF6  CFFA F001          	movff	pclath,??_tc_int
  1918  000AFA  CFFB F002          	movff	pclatu,??_tc_int+1
  1919  000AFE  CFE9 F003          	movff	fsr0l,??_tc_int+2
  1920  000B02  CFEA F004          	movff	fsr0h,??_tc_int+3
  1921  000B06  CFE1 F005          	movff	fsr1l,??_tc_int+4
  1922  000B0A  CFE2 F006          	movff	fsr1h,??_tc_int+5
  1923  000B0E  CFD9 F007          	movff	fsr2l,??_tc_int+6
  1924  000B12  CFDA F008          	movff	fsr2h,??_tc_int+7
  1925  000B16  CFF3 F009          	movff	prodl,??_tc_int+8
  1926  000B1A  CFF4 F00A          	movff	prodh,??_tc_int+9
  1927  000B1E  CFF6 F00B          	movff	tblptrl,??_tc_int+10
  1928  000B22  CFF7 F00C          	movff	tblptrh,??_tc_int+11
  1929  000B26  CFF8 F00D          	movff	tblptru,??_tc_int+12
  1930  000B2A  CFF5 F00E          	movff	tablat,??_tc_int+13
  1931                           
  1932                           ;Interrupt.c: 62: if (TMR1IE && TMR1IF)
  1933  000B2E  B09D               	btfsc	3997,0,c	;volatile
  1934  000B30  A09E               	btfss	3998,0,c	;volatile
  1935  000B32  D001               	goto	i2l125
  1936                           
  1937                           ;Interrupt.c: 63: {
  1938                           ;Interrupt.c: 64: TMR1IF=0;
  1939  000B34  909E               	bcf	3998,0,c	;volatile
  1940  000B36                     i2l125:
  1941  000B36  C00E  FFF5         	movff	??_tc_int+13,tablat
  1942  000B3A  C00D  FFF8         	movff	??_tc_int+12,tblptru
  1943  000B3E  C00C  FFF7         	movff	??_tc_int+11,tblptrh
  1944  000B42  C00B  FFF6         	movff	??_tc_int+10,tblptrl
  1945  000B46  C00A  FFF4         	movff	??_tc_int+9,prodh
  1946  000B4A  C009  FFF3         	movff	??_tc_int+8,prodl
  1947  000B4E  C008  FFDA         	movff	??_tc_int+7,fsr2h
  1948  000B52  C007  FFD9         	movff	??_tc_int+6,fsr2l
  1949  000B56  C006  FFE2         	movff	??_tc_int+5,fsr1h
  1950  000B5A  C005  FFE1         	movff	??_tc_int+4,fsr1l
  1951  000B5E  C004  FFEA         	movff	??_tc_int+3,fsr0h
  1952  000B62  C003  FFE9         	movff	??_tc_int+2,fsr0l
  1953  000B66  C002  FFFB         	movff	??_tc_int+1,pclatu
  1954  000B6A  C001  FFFA         	movff	??_tc_int,pclath
  1955  000B6E  923D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1956  000B70  0011               	retfie		f
  1957  000B72                     __end_of_tc_int:
  1958                           	opt stack 0
  1959                           pclatu	equ	0xFFB
  1960                           pclath	equ	0xFFA
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           prodh	equ	0xFF4
  1966                           prodl	equ	0xFF3
  1967                           intcon	equ	0xFF2
  1968                           intcon2	equ	0xFF1
  1969                           postinc0	equ	0xFEE
  1970                           plusw0	equ	0xFEB
  1971                           fsr0h	equ	0xFEA
  1972                           fsr0l	equ	0xFE9
  1973                           wreg	equ	0xFE8
  1974                           postinc1	equ	0xFE6
  1975                           postdec1	equ	0xFE5
  1976                           fsr1h	equ	0xFE2
  1977                           fsr1l	equ	0xFE1
  1978                           bsr	equ	0xFE0
  1979                           indf2	equ	0xFDF
  1980                           postinc2	equ	0xFDE
  1981                           postdec2	equ	0xFDD
  1982                           plusw2	equ	0xFDB
  1983                           fsr2h	equ	0xFDA
  1984                           fsr2l	equ	0xFD9
  1985                           status	equ	0xFD8
  1986                           pclatu	equ	0xFFB
  1987                           pclath	equ	0xFFA
  1988                           tblptru	equ	0xFF8
  1989                           tblptrh	equ	0xFF7
  1990                           tblptrl	equ	0xFF6
  1991                           tablat	equ	0xFF5
  1992                           prodh	equ	0xFF4
  1993                           prodl	equ	0xFF3
  1994                           intcon	equ	0xFF2
  1995                           intcon2	equ	0xFF1
  1996                           postinc0	equ	0xFEE
  1997                           plusw0	equ	0xFEB
  1998                           fsr0h	equ	0xFEA
  1999                           fsr0l	equ	0xFE9
  2000                           wreg	equ	0xFE8
  2001                           postinc1	equ	0xFE6
  2002                           postdec1	equ	0xFE5
  2003                           fsr1h	equ	0xFE2
  2004                           fsr1l	equ	0xFE1
  2005                           bsr	equ	0xFE0
  2006                           indf2	equ	0xFDF
  2007                           postinc2	equ	0xFDE
  2008                           postdec2	equ	0xFDD
  2009                           plusw2	equ	0xFDB
  2010                           fsr2h	equ	0xFDA
  2011                           fsr2l	equ	0xFD9
  2012                           status	equ	0xFD8
  2013                           
  2014                           	psect	rparam
  2015  0000                     pclatu	equ	0xFFB
  2016                           pclath	equ	0xFFA
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           prodh	equ	0xFF4
  2022                           prodl	equ	0xFF3
  2023                           intcon	equ	0xFF2
  2024                           intcon2	equ	0xFF1
  2025                           postinc0	equ	0xFEE
  2026                           plusw0	equ	0xFEB
  2027                           fsr0h	equ	0xFEA
  2028                           fsr0l	equ	0xFE9
  2029                           wreg	equ	0xFE8
  2030                           postinc1	equ	0xFE6
  2031                           postdec1	equ	0xFE5
  2032                           fsr1h	equ	0xFE2
  2033                           fsr1l	equ	0xFE1
  2034                           bsr	equ	0xFE0
  2035                           indf2	equ	0xFDF
  2036                           postinc2	equ	0xFDE
  2037                           postdec2	equ	0xFDD
  2038                           plusw2	equ	0xFDB
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8
  2042                           
  2043                           	psect	temp
  2044  00003D                     btemp:
  2045                           	opt stack 0
  2046  00003D                     	ds	1
  2047  0000                     int$flags	set	btemp
  2048                           pclatu	equ	0xFFB
  2049                           pclath	equ	0xFFA
  2050                           tblptru	equ	0xFF8
  2051                           tblptrh	equ	0xFF7
  2052                           tblptrl	equ	0xFF6
  2053                           tablat	equ	0xFF5
  2054                           prodh	equ	0xFF4
  2055                           prodl	equ	0xFF3
  2056                           intcon	equ	0xFF2
  2057                           intcon2	equ	0xFF1
  2058                           postinc0	equ	0xFEE
  2059                           plusw0	equ	0xFEB
  2060                           fsr0h	equ	0xFEA
  2061                           fsr0l	equ	0xFE9
  2062                           wreg	equ	0xFE8
  2063                           postinc1	equ	0xFE6
  2064                           postdec1	equ	0xFE5
  2065                           fsr1h	equ	0xFE2
  2066                           fsr1l	equ	0xFE1
  2067                           bsr	equ	0xFE0
  2068                           indf2	equ	0xFDF
  2069                           postinc2	equ	0xFDE
  2070                           postdec2	equ	0xFDD
  2071                           plusw2	equ	0xFDB
  2072                           fsr2h	equ	0xFDA
  2073                           fsr2l	equ	0xFD9
  2074                           status	equ	0xFD8


Data Sizes:
    Strings     59
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      60
    BANK0           160     21      21
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    timerStruct.ptrSystemTimerValue	PTR unsigned int  size(2) Largest target is 10
		 -> sSystemTimers(COMRAM[10]), 

    timerStruct.ptrSystemTimerValue	PTR unsigned int  size(2) Largest target is 10
		 -> sSystemTimers(COMRAM[10]), 

    timerInit@ptrSystemTimerValue	PTR const unsigned int  size(2) Largest target is 10
		 -> sSystemTimers.timer1s(COMRAM[2]), sSystemTimers.timer100ms(COMRAM[2]), sSystemTimers(COMRAM[10]), 

    timerInit@ptrTimer.ptrSystemTimerValue	PTR unsigned int  size(2) Largest target is 10
		 -> sSystemTimers(COMRAM[10]), 

    timerInit@ptrTimer	PTR struct . size(2) Largest target is 8
		 -> KeepAlive@timerKeepAlive(COMRAM[7]), ledStatus@timerLedStatus(COMRAM[7]), 

    sp__getsUsart	PTR unsigned char  size(2) Largest target is 0

    putsUsart@s	PTR unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[17]), STR_2(CODE[10]), STR_1(CODE[9]), 

    F4266.ptrSystemTimerValue	PTR unsigned int  size(2) Largest target is 10
		 -> sSystemTimers(COMRAM[10]), 

    S120$ptrSystemTimerValue	PTR unsigned int  size(2) Largest target is 10
		 -> sSystemTimers(COMRAM[10]), 

    F4262.ptrSystemTimerValue	PTR unsigned int  size(2) Largest target is 10
		 -> sSystemTimers(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowIsr in COMRAM

    _SystemTimers->___lwmod

Critical Paths under _tc_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ledStatus
    _ledStatus->_timerIsTimeout
    _KeepAlive->_timerIsTimeout
    _timerIsTimeout->_timerValue
    _putsUsart->_putUsart

Critical Paths under _LowIsr in BANK0

    None.

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowIsr in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowIsr in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowIsr in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowIsr in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowIsr in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowIsr in BANK6

    None.

Critical Paths under _tc_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowIsr in BANK7

    None.

Critical Paths under _tc_int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3729
                            _InitMCU
                          _KeepAlive
                          _ledStatus
                          _putsUsart
 ---------------------------------------------------------------------------------
 (1) _ledStatus                                            1     1      0    1667
                                             20 BANK0      1     1      0
                          _putsUsart
                          _timerInit
                     _timerIsTimeout
 ---------------------------------------------------------------------------------
 (1) _KeepAlive                                            0     0      0    1667
                          _putsUsart
                          _timerInit
                     _timerIsTimeout
 ---------------------------------------------------------------------------------
 (2) _timerIsTimeout                                       7     0      7     562
                                             13 BANK0      7     0      7
                         _timerValue
 ---------------------------------------------------------------------------------
 (3) _timerValue                                          13     6      7     343
                                              0 BANK0     13     6      7
 ---------------------------------------------------------------------------------
 (2) _timerInit                                            8     2      6     710
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _putsUsart                                            2     0      2     395
                                              1 BANK0      2     0      2
                           _putUsart
 ---------------------------------------------------------------------------------
 (2) _putUsart                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitMCU                                              0     0      0       0
                          _InitTimer
                          _initUsart
 ---------------------------------------------------------------------------------
 (2) _initUsart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowIsr                                              17    17      0     671
                                             19 COMRAM    17    17      0
                       _SystemTimers
 ---------------------------------------------------------------------------------
 (5) _SystemTimers                                         0     0      0     671
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     671
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _tc_int                                              14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitMCU
     _InitTimer
     _initUsart
   _KeepAlive
     _putsUsart
       _putUsart
     _timerInit
     _timerIsTimeout
       _timerValue
   _ledStatus
     _putsUsart
       _putUsart
     _timerInit
     _timerIsTimeout
       _timerValue
   _putsUsart
     _putUsart

 _LowIsr (ROOT)
   _SystemTimers
     ___lwmod

 _tc_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     15      15       5       13.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      3C       1       63.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51      20        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Jun 18 22:35:52 2017

                          l69 0CFE                   __CFG_BOR$ON 000000                            bsr 000FE0  
                 __CFG_BORV$2 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CPB$OFF 000000  
                         u711 0C1E                           u740 0A10                           u680 0AAA  
                         u681 0AA6                           u761 0A5C                           u690 0AAC  
                         u746 0A12                           u791 0BBA                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          l1125 0940  
                        l1207 0BB0                          l1215 0CA4                          l1129 098C  
                        l1165 0C48                          l1169 0C5E                          l1177 0C42  
                        l1195 0A40                          l1197 0A52                          STR_1 0833  
                        STR_2 0829                          STR_3 0818                          STR_4 0801  
            ??_timerIsTimeout 0074                          _TMR0 000FD6                          _main 0C90  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 003D                          prodh 000FF4  
                        prodl 000FF3                          start 00BA                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitMCU 0CFA  
               __CFG_PLLDIV$5 000000                         ?_main 0001                         _T0CON 000FD5  
                       _T1CON 000FCD                         i1l129 0072               __end_of___lwmod 0C14  
                       i2l125 0B36                         i1l586 0C0A                         _RCREG 000FAE  
                       _RCSTA 000FAB                         _SPBRG 000FAF                         _TXREG 000FAD  
                       _TXSTA 000FAC                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000             timerInit@ptrTimer 0060                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                __CFG_EBTRB$OFF 000000                         pclath 000FFA  
                       tablat 000FF5                         plusw0 000FEB                         plusw2 000FDB  
                       status 000FD8                __CFG_PBADEN$ON 000000               __initialization 0C72  
       __size_of_SystemTimers 00EA                  __end_of_main 0CAE       ledStatus@timerLedStatus 0036  
                      ??_main 0075                 __activetblptr 000001            __size_of_KeepAlive 0060  
                      i1l1021 0BE0                        i1l1023 0BE8                        i1l1025 0BEC  
                      i1l1029 0C00                        i1l1071 0886                        i1l1063 0852  
                      i1l1081 08BE                        i1l1073 088A                        i1l1065 0856  
                      i1l1095 0922                        i1l1087 08EE                        i1l1079 08BA  
                      i1l1089 08F2                  _SystemTimers 083E                        _TMR1IE 007CE8  
                      _TMR1IF 007CF0                        _SPBRGH 000FB0            __size_of_InitTimer 001C  
                   ??_InitMCU 0060                __CFG_XINST$OFF 000000                        _LowIsr 0018  
              __CFG_STVREN$ON 000000                     ??___lwmod 0013                        clear_0 0C78  
                      _tc_int 0008                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8              __end_of_putUsart 0D08  
                  __accesstop 0060       __end_of__initialization 0C7E                 ___rparam_used 000001  
           __end_of_KeepAlive 0BD2                __pcstackCOMRAM 0001             __end_of_InitTimer 0CCA  
          __size_of_ledStatus 0098            __size_of_initUsart 001A                       ?_LowIsr 0001  
                     _BAUDCON 000FB8                       ?_tc_int 0001            __size_of_timerInit 0080  
          __size_of_putsUsart 002C               __CFG_VREGEN$OFF 000000                       _InitMCU 0CE4  
                     __Hparam 0000                       __Lparam 0000               __size_of_LowIsr 00A2  
           __end_of_ledStatus 0A74                 _sSystemTimers 0025                     ?_putUsart 0001  
                     ___lwmod 0BD2                  __psmallconst 0800                       __pcinit 0C72  
                     __ramtop 0800               __size_of_tc_int 0B6A                       __ptext0 0C90  
                     __ptext1 09DC                       __ptext2 0B72                       __ptext3 0C14  
                     __ptext4 0928                       __ptext5 0A74                       __ptext6 0C46  
                     __ptext7 0CFA                       __ptext8 0CE4                       __ptext9 0CCA  
                   _T0CONbits 000FD5             __end_of_initUsart 0CE4                __pintcode_body 0AF4  
        end_of_initialization 0C7E         timerValue@timerStruct 0060                       int_func 0AF4  
           __end_of_timerInit 0AF4       __size_of_timerIsTimeout 0032                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE                    ??_putUsart 0060             __end_of_putsUsart 0C72  
                  _timerValue 0928                     _PORTBbits 000F81                     _TRISBbits 000F93  
                   _TRISCbits 000F94                     _TXSTAbits 000FAC                __end_of_LowIsr 00BA  
                   _KeepAlive 0B72                __end_of_tc_int 0B72  timerInit@ptrSystemTimerValue 0064  
       timerInit@timeoutValue 0062           start_initialization 0C72                     _InitTimer 0CAE  
                    ??_LowIsr 0014              __CFG_LPT1OSC$OFF 000000                    ?_KeepAlive 0001  
                    ??_tc_int 0001                   ?_timerValue 0060                   __pbssCOMRAM 0025  
           timerValue@difTime 006B                 __pcstackBANK0 0060                    ?_InitTimer 0001  
                    ?_InitMCU 0001                _timerIsTimeout 0C14                     __pintcode 0008  
                    ?___lwmod 000F       KeepAlive@timerKeepAlive 002F                   __pintcodelo 0018  
                   _ledStatus 09DC             __size_of_putUsart 000E                   __smallconst 0800  
                   _initUsart 0CCA                 ?_SystemTimers 0001           __size_of_timerValue 00B4  
                    _IPR1bits 000F9F        __end_of_timerIsTimeout 0C46                      _PIE1bits 000F9D  
                    _PIR1bits 000F9E                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                   _timerInit 0A74                   ??_KeepAlive 0074                    ?_ledStatus 0001  
                   _putsUsart 0C46                   ??_InitTimer 0060                    ?_initUsart 0001  
                 _INTCON2bits 000FF1                ??_SystemTimers 0014               ?_timerIsTimeout 006D  
            __size_of_InitMCU 0016                      __Hrparam 0000                      __Lrparam 0000  
                __Lsmallconst 0800                    ?_timerInit 0060     timerIsTimeout@timerStruct 006D  
            __size_of___lwmod 0042                    putsUsart@s 0061                    ?_putsUsart 0061  
                    __ptext10 0CAE                      __ptext12 083E                      __ptext13 0BD2  
               __size_of_main 001E                      int$flags 003D                      _putUsart 0CFA  
                ??_timerValue 0067                   ??_ledStatus 0074         __CFG_CPUDIV$OSC1_PLL2 000000  
                   putUsart@c 0060                    _INTCONbits 000FF2                   ??_initUsart 0060  
                    intlevel1 0000                      intlevel2 0000              ___lwmod@dividend 000F  
          __end_of_timerValue 09DC                   ??_timerInit 0066          __end_of_SystemTimers 0928  
                 ??_putsUsart 0063               ___lwmod@divisor 0011               ___lwmod@counter 0013  
          __CFG_FOSC$HSPLL_HS 000000  
